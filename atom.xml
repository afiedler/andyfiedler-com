<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Andy Fiedler</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2021-03-03T02:52:00+00:00</updated>
 <id></id>
 <author>
   <name>Andy Fiedler</name>
   <email></email>
 </author>

 
 <entry>
   <title>Mac M1 Gotchas</title>
   <link href="/2021/03/mac-m1-gotchas"/>
   <updated>2021-03-02T00:00:00+00:00</updated>
   <id>/2021/03/mac-m1-gotchas</id>
   <content type="html">&lt;p&gt;Last updated March 2, 2021&lt;/p&gt;

&lt;h2 id=&quot;monitors&quot;&gt;Monitors&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;M1 Macs &lt;a href=&quot;https://discussions.apple.com/thread/252269130&quot;&gt;don’t expose DDC/CI&lt;/a&gt;, so you &lt;a href=&quot;https://github.com/MonitorControl/MonitorControl/issues/323&quot;&gt;can’t
use apps like MonitorControl&lt;/a&gt; to
change volume/brightness.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;development&quot;&gt;Development&lt;/h2&gt;

&lt;h3 id=&quot;visual-studio-code&quot;&gt;Visual Studio Code&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Need to use the Insiders edition&lt;/li&gt;
  &lt;li&gt;The Terminal runs in ARM64 mode, so if you want to run programs via Rosetta 2, you need to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arch -x86_64 &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nodejs&quot;&gt;NodeJS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;No prebuild ARM64 package, so it needs to compile. Node v14.16 compiled successfully for me!&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Useful Command Line Tools</title>
   <link href="/2020/06/useful-command-line-tools"/>
   <updated>2020-06-01T00:00:00+00:00</updated>
   <id>/2020/06/useful-command-line-tools</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sharkdp/fd&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fd&lt;/code&gt;&lt;/a&gt; - better &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find&lt;/code&gt; command&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sjurba/rebase-editor&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rebase-editor&lt;/code&gt;&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i&lt;/code&gt; interactive rebase editor&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Streaming Hapi Responses with MongoDB</title>
   <link href="/2017/01/mongodb-stream-to-hapi"/>
   <updated>2017-01-10T00:00:00+00:00</updated>
   <id>/2017/01/mongodb-stream-to-hapi</id>
   <content type="html">&lt;p&gt;Let’s say you are implementing a REST endpoint that lists a collection. Normally, you’d paginate the endpoint with a
maximum page size of say 25 items to avoid memory issues. You’d return something like this example, and if the client
wants more than one page, it would need to make more than one request:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Item 1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Item 2&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;current&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hasPrev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;next&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hasNext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;total&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;perPage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;begin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;end&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;total&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This can be a real pain for clients to deal with, especially if the client knows it wants &lt;em&gt;everything&lt;/em&gt;. With NodeJS,
you may be able to greatly increase the maximum page size or eliminate it completely with streams. This is because
with streams you don’t need to buffer the entire response before sending it. You can send the response piece by piece,
greatly reducing the memory demands on the server.&lt;/p&gt;

&lt;p&gt;If you are using MongoDB, you can get a streaming response from the database like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will be an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;objectMode&lt;/code&gt; stream, with each object one document from your MongoDB collection. HapiJS also supports
streaming responses like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Within your handler&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;HapiJS response streams should be in binary mode or in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;objectMode&lt;/code&gt; emitting strings. You can’t just connect your
MongoDB stream to HapiJS because you need to construct a valid JSON object so the client can parse it. To do that, you
can pipe your MongoDB stream through a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Transform&lt;/code&gt; stream that takes in MongoDB documents and emits a JSON object piece
by piece that will look like the response above. Here’s an example of a stream that does that:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// PaginationStream.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Transform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationStream&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Transform&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/**
   * Create a PaginationStream
   * @param page {Number} which page of data will be streamed through
        (starting with 1)
   * @param perPage {Number} how many objects are returned per page
        (&amp;gt;= 0; if 0, then return all objects)
   * @param total {Number} the total number of results (&amp;gt;= 0)
   */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;page should be &amp;gt;= 1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;perPage should be &amp;gt;= 0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;total should be &amp;gt;= 0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;objectMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPageReached&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPageReached&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pagination page limit already reached&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;  &quot;data&quot;:[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// When we reach the limit or the total number of objects, emit an&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// end of array marker and the pagination object&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_isEndOfPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPageReached&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pagination&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_paginationObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pagination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^{/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;], &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paginationJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;_isEndOfPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// Has a per-page limit if perPage &amp;gt; 0&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// No per-page limit if perPage === 0&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/**
   * Returns a pagination object
   * @param page {Number} current page number
   * @param total {Number} total number of objects
   * @param perPage {Number} number of objects per page
   * @private
   */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_paginationObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;begin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hasPrev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;perPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can use these streams together like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is pretty good, but if the response is large, we really need to gzip it. Luckily, Node provides a GZip stream that
we can use.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gzipStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createGzip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gzipStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;content-encoding&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;gzip&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are a few edge cases that we need to deal with, though:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;If your response is taking a really long time, the user could close the tab of the browser which would close the
socket. If the socket is closed, we need to stop the stream both to save resources and because the gzip stream will emit
an error if we try to send data to it after the socket closes.&lt;/li&gt;
  &lt;li&gt;There could be some kind of MongoDB error mid-stream (unlikely, but I’ll show you how to handle it anyway)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To handle these edge cases, we’ll attach error handlers to the streams and log the errors. Whenever an error handler is
attached to a stream, Node will assume the application is dealing with the error. If there is no error handler on a
stream, any error in the stream causes the process to quit like an unhandled exception.&lt;/p&gt;

&lt;p&gt;Here’s the code with error handlers added. Maybe there is a more concise way just trapping all errors, but this is what
is working for me:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;mongo&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pagination&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gzipStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createGzip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;gzip&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Handle the browser cancelling the request&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;stream closed due to client cancellation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paginationStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gzipStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;content-encoding&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;gzip&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There you go! MongoDB streaming HTTP requests using Hapi. A few other things to keep in mind:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You need to change the Mongo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.find()&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.count()&lt;/code&gt; calls to also implement your pagination logic. You should use
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.sort()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.seek()&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.limit()&lt;/code&gt; to only return one page of data from the database. If you return more than a page of
data, PaginatedStream will emit an error event.&lt;/li&gt;
  &lt;li&gt;When using streaming responses, the headers are sent as soon as the first bit of data comes down the stream. There is
no way to change the headers after data has been sent, so you &lt;em&gt;cannot&lt;/em&gt; change the HTTP status code of the response if
there is an error mid-stream. I might do another post on some strategies to deal with that issue later.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Connecting to Heroku Postgres in Python</title>
   <link href="/2016/10/connecting-to-heroku-postgres-in-python"/>
   <updated>2016-10-19T00:00:00+00:00</updated>
   <id>/2016/10/connecting-to-heroku-postgres-in-python</id>
   <content type="html">&lt;p&gt;This is for Python 3, using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;psycopg2&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;psycopg2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'heroku config:get DATABASE_URL -a my-heroku-app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'?sslmode=require'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psycopg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make sure you’ve installed Postgres locally with SSL support. Here’s how I did it:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;postgres &lt;span class=&quot;nt&quot;&gt;--with-openssl&lt;/span&gt;
pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;psycopg2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For some reason, Postgres.app did not work for me. Instead, I needed to use the Homebrew version.&lt;/p&gt;

&lt;h2 id=&quot;using-pandas-to-make-tables-in-jupyter&quot;&gt;Using Pandas to make tables in Jupyter&lt;/h2&gt;

&lt;p&gt;If you are using Jupyter, you can use Pandas to make nice tables from SQL queries:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sqlalchemy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_engine&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'heroku config:get DATABASE_URL -a my-heroku-app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'?sslmode=require'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'select id, email from users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That will give you a nice table like this:
&lt;img src=&quot;/generated/pandas_jupyter-800-2ba47c013.png&quot; srcset=&quot;/generated/pandas_jupyter-400-2ba47c013.png 400w, /generated/pandas_jupyter-600-2ba47c013.png 600w, /generated/pandas_jupyter-800-2ba47c013.png 800w, /generated/pandas_jupyter-1000-2ba47c013.png 1000w&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Memory Issues with NodeJS Streams? Remove 0.8.x Streams from Your Pipe</title>
   <link href="/2016/10/nodejs-streams-memory-issues-and-backpressure"/>
   <updated>2016-10-13T00:00:00+00:00</updated>
   <id>/2016/10/nodejs-streams-memory-issues-and-backpressure</id>
   <content type="html">&lt;p&gt;I was working on an ETL process with NodeJS that ran on Heroku, which limits you to 500MB of
memory on a standard dyno. The ETL was quickly running out of memory, even through each
document that it processed was less than 1MB.&lt;/p&gt;

&lt;p&gt;This ETL was made up of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Readable&lt;/code&gt; stream from a MongoDB &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cursor&lt;/code&gt;, then two &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Transform&lt;/code&gt;
streams, one using &lt;a href=&quot;https://github.com/dominictarr/event-stream&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event-stream&lt;/code&gt;&lt;/a&gt; and one 
implemented as a subclass of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stream.Transform&lt;/code&gt;. The last stream was a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Writable&lt;/code&gt; stream
that validated and wrote back documents to MongoDB.&lt;/p&gt;

&lt;p&gt;Clearly the readable stream was reading documents out of Mongo way too quickly for the
transform streams to do their work and the writable stream to write the documents back to
MongoDB. But wasn’t NodeJS suppose to manage this automatically, assuming the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;highWaterMark&lt;/code&gt;
was set to something reasonable?&lt;/p&gt;

&lt;p&gt;It turns our that, yes, NodeJS does manage this correctly, as long as &lt;em&gt;every stream in your pipe
is a 0.10.x stream or greater&lt;/em&gt;. NodeJS implemented the 
&lt;a href=&quot;https://nodejs.org/en/blog/feature/streams2/&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;highWaterMark&lt;/code&gt; in Node 0.10.x&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The culprit in my case was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event-stream&lt;/code&gt;, which is an old library that only makes 0.8.x streams.&lt;/p&gt;

&lt;p&gt;Moral of the story: if you are having memory issues with streams that seem like backpressure
should be solving, make sure all of the streams in your pipe are 0.10.x streams or greater!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Learning React as an AngularJS Developer</title>
   <link href="/2016/08/learning-react-as-an-angular-js-developer"/>
   <updated>2016-08-18T00:00:00+00:00</updated>
   <id>/2016/08/learning-react-as-an-angular-js-developer</id>
   <content type="html">&lt;h2 id=&quot;react-isnt-a-framework&quot;&gt;React isn’t a framework&lt;/h2&gt;

&lt;p&gt;You use Angular, so you probably like frameworks. React and redux are &lt;em&gt;not&lt;/em&gt; frameworks in the same sense as Angular. You can use &lt;a href=&quot;https://github.com/davezuko/react-redux-starter-kit&quot;&gt;React Redux Starter Kit&lt;/a&gt; and/or &lt;a href=&quot;https://github.com/SpencerCDixon/redux-cli&quot;&gt;Redux CLI&lt;/a&gt; to get a React/Redux app set up with some sensible defaults, though.&lt;/p&gt;

&lt;h3 id=&quot;replacements-for-other-parts-of-angular&quot;&gt;Replacements for other parts of Angular&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$http&lt;/code&gt; – &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;axios&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Factories and services – ES6 modules with Webpack&lt;/li&gt;
  &lt;li&gt;Mocking modules (or in Angular, services or factories) in your tests – &lt;a href=&quot;https://github.com/speedskater/babel-plugin-rewire&quot;&gt;babel-plugin-rewire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;understand-the-component-lifecycle-methods&quot;&gt;Understand the component lifecycle methods&lt;/h2&gt;

&lt;p&gt;Best resource I’ve found is &lt;a href=&quot;http://busypeoples.github.io/post/react-component-lifecycle/&quot;&gt;Understanding the React Component Lifecycle&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;get-a-good-authentication-library&quot;&gt;Get a good authentication library&lt;/h2&gt;

&lt;p&gt;I recommend &lt;a href=&quot;redux-auth-wrapper&quot;&gt;redux-auth-wrapper&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>A Better $patch Method for Angular's ngResource</title>
   <link href="/2016/04/a-better-patch-method-for-angulars-ngresource"/>
   <updated>2016-04-16T00:00:00+00:00</updated>
   <id>/2016/04/a-better-patch-method-for-angulars-ngresource</id>
   <content type="html">&lt;p&gt;Angular’s ngResource makes a pretty decent starting point for developing a front-end model layer, but tends to be a little simplistic as your backend API gets more sophisticated.&lt;/p&gt;

&lt;p&gt;One issue I ran into recently is that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$patch&lt;/code&gt; method sends the entire object in the request body. This is usually not what you want to do, because the PATCH method is &lt;a href=&quot;https://tools.ietf.org/html/rfc5789&quot;&gt;designed for a partial resource modification&lt;/a&gt;, typically using something like &lt;a href=&quot;https://tools.ietf.org/html/rfc7386&quot;&gt;JSON Merge Patch&lt;/a&gt; or &lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON Patch&lt;/a&gt; as the request body.&lt;/p&gt;

&lt;p&gt;Here’s how to add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$patchFields&lt;/code&gt; method to your resource that creates a JSON Merge Patch for a set of fields, and then sends it to the backend.&lt;/p&gt;

&lt;p&gt;This is how you’d use it:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;product&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;231&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;iPad&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;429.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$patchFields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;size.height&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*
 * Sends a request like this:
 * PATCH http://api.example.com/products/231
 * {
 *    &quot;price&quot;: 400,
 *    &quot;size&quot;: {
 *       &quot;height&quot;: 10
 *    }
 * }
 *
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here’s the code:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;myApp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;http://api.example.com/products/:id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

   &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$patchFields&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;patch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatePatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$promise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;generatePatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;setFieldByPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getFieldByPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;getFieldByPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isUndefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
               &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

   &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setFieldByPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isUndefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
               &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
               &lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                  &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Path &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                  &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                  &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; has an item that is not an object&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;setOn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Cannot set value at &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; since it would overwrite a function&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Testing Angular $q Promises</title>
   <link href="/2016/04/testing-angular-q-promises"/>
   <updated>2016-04-12T14:27:44+00:00</updated>
   <id>/2016/04/testing-angular-q-promises</id>
   <content type="html">&lt;p&gt;This is a quick reference to testing Angular’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$q&lt;/code&gt; promises.&lt;/p&gt;

&lt;table&gt;
   &lt;caption&gt;Values of &lt;code&gt;promise.$$state.status&lt;/code&gt;&lt;/caption&gt;
   &lt;thead&gt;
      &lt;tr&gt;
         &lt;th&gt;Value&lt;/th&gt;
         &lt;th&gt;State&lt;/th&gt;
      &lt;/tr&gt;
   &lt;/thead&gt;
   &lt;tbody&gt;
      &lt;tr&gt;
         &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
         &lt;td&gt;Outstanding&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
         &lt;td&gt;Resolved&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
         &lt;td&gt;Rejected&lt;/td&gt;
      &lt;/tr&gt;
   &lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Jupyter for Exploring a Heroku Database</title>
   <link href="/2016/03/using-jupyter-for-exploring-a-heroku-database"/>
   <updated>2016-03-25T18:59:45+00:00</updated>
   <id>/2016/03/using-jupyter-for-exploring-a-heroku-database</id>
   <content type="html">&lt;p&gt;If you want to establish a connection to a Heroku database and import data into Jupyter for some analysis, here’s some boilerplate to help:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Python 3
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sqlalchemy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_engine&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DATABASE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check_output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;heroku config:get DATABASE_URL --app &amp;lt;your heroku app name here&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATABASE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_sql_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'''
SELECT * FROM my_table;
    '''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;result&lt;/code&gt;, which is a Pandas DataFrame. Happy data exploration!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It probably goes without saying this is a &lt;strong&gt;bad idea&lt;/strong&gt; to do on a production system. You should use a read-only replica for running queries in production, or use a dump of the database loaded onto another server.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Draft.js Data Model Demo</title>
   <link href="/2016/03/draft-js-data-model-demo"/>
   <updated>2016-03-11T17:52:16+00:00</updated>
   <id>/2016/03/draft-js-data-model-demo</id>
   <content type="html">&lt;p&gt;Facebook released a very interesting &lt;a href=&quot;https://facebook.github.io/draft-js/&quot;&gt;React-based rich text editor called Draft.js&lt;/a&gt;. The advantage of something like is that you have much more control over the data model for structured documents.&lt;/p&gt;

&lt;p&gt;The documentation is a little sparse on examples of what the underlying data model looks like, so I build this quick demo that renders the data model in JSON.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://afiedler.github.io/draft-js-dm-demo/&quot;&gt;See it live here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2016/03/Screen-Shot-2016-03-11-at-12.43.01-PM-800-e11796616.png&quot; srcset=&quot;/generated/wp/uploads/2016/03/Screen-Shot-2016-03-11-at-12.43.01-PM-400-e11796616.png 400w, /generated/wp/uploads/2016/03/Screen-Shot-2016-03-11-at-12.43.01-PM-600-e11796616.png 600w, /generated/wp/uploads/2016/03/Screen-Shot-2016-03-11-at-12.43.01-PM-800-e11796616.png 800w, /generated/wp/uploads/2016/03/Screen-Shot-2016-03-11-at-12.43.01-PM-1000-e11796616.png 1000w&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Getting Jetbrains DataGrip to work with Heroku Postgres</title>
   <link href="/2016/02/getting-jetbrains-datagrip-to-work-with-heroku-postgres"/>
   <updated>2016-02-11T16:03:52+00:00</updated>
   <id>/2016/02/getting-jetbrains-datagrip-to-work-with-heroku-postgres</id>
   <content type="html">&lt;p&gt;Heroku Postgres forces you to use SSL, but the connection isn’t signed with a well-known CA. To get this to work in DataGrip, you have to mess around with some JDBC settings. Here’s how to do it:&lt;/p&gt;

&lt;p&gt;In the add connections dialog, enter the username, password, hostname, port, and database name. You’ll have to enter these manually, because DataGrip’s URL support only works with JDBC database URLs, not the more common Postgres URLs used by Heroku.&lt;/p&gt;

&lt;p&gt;Next, click on the Advanced tab. Then find the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssl&lt;/code&gt; property and set it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;. Then find the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sslfactory&lt;/code&gt; property and set it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.postgresql.ssl.NonValidatingFactory&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You should be good to go!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Abstract Classes with Static Methods in ES2015</title>
   <link href="/2016/01/abstract-classes-with-static-methods-in-es2015"/>
   <updated>2016-01-19T19:42:17+00:00</updated>
   <id>/2016/01/abstract-classes-with-static-methods-in-es2015</id>
   <content type="html">&lt;p&gt;ES2105 classes have much better support for static method patterns than traditional ways of doing it in ES5.&lt;/p&gt;

&lt;p&gt;In ES2015, there are actually two prototype chains in classes: one for instance methods and one for static methods. This means you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;super&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; in a static method, and it works as expected.&lt;/p&gt;

&lt;p&gt;This makes using an abstract class pattern much easier. Here’s an example:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;use strict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AbstractShape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SHAPE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;must specify a SHAPE_NAME in your subclass of &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;AbstractShape&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;englishName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SHAPE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spanishName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SHAPE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;en-MX&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AbstractShape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SHAPE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;es-MX&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;cuadrado&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;englishName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 'square'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;spanishName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 'cuadrado'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AbstractShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;englishName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Throws an Error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A few things that are interesting with ES2015 static methods:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can’t have static properties, but you can make static getters to get the same effect (with some syntactic noise).&lt;/li&gt;
  &lt;li&gt;In a static method, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; refers to the class itself. Effectively, you can just access other static methods with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;You cannot refer to the class itself in the class body. This is not legal:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;englishName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AbstractShape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SHAPE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I’m guessing is the reason for this is that classes are not hoisted in ES2015.&lt;/p&gt;

&lt;p&gt;More class posts coming soon!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Refactoring an Existing NodeJS App for ES2015 (Part 1)</title>
   <link href="/2016/01/refactoring-an-existing-nodejs-app-for-es2015-part-1"/>
   <updated>2016-01-13T16:12:53+00:00</updated>
   <id>/2016/01/refactoring-an-existing-nodejs-app-for-es2015-part-1</id>
   <content type="html">&lt;p&gt;Thinking of getting started with ES2015? Coding with NodeJS v5.0.0 or higher? You can get started today! Node supports many features of ES2015 natively, without the need for a transpiler like Babel or Traceur.&lt;/p&gt;

&lt;p&gt;ES2015 actually has a &lt;em&gt;lot&lt;/em&gt; of really awesome features, and I think most of them are worthwhile to start using eventually. But, it you already have a Node app written and want to introduce ES2015 gradually, which features should you pick first?&lt;/p&gt;

&lt;p&gt;This post talks about the three ES2015 features that I would focus on first. I picked these because they are the most compatible with existing patterns and are the easiest for developers to pick up and start using right away. They are also all supported fully in Node 5.x.&lt;/p&gt;

&lt;p&gt;The features are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Block-scoped declarations (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Arrow functions&lt;/li&gt;
  &lt;li&gt;Template strings and new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt; methods&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Part 2 will of this series will talk about classes.&lt;/p&gt;

&lt;h2 id=&quot;start-using-block-scoped-variable-declarations-let-and-const-instead-of-var&quot;&gt;Start using block-scoped variable declarations (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;) instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You need to be in strict mode (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'use strict'&lt;/code&gt;) for these keywords to work. If you are using the Node REPL, you need to start it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node --use_strict&lt;/code&gt; as opposed to typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'use strict';&lt;/code&gt; within the REPL.&lt;/p&gt;

&lt;h3 id=&quot;what-is-this-let-business&quot;&gt;What is this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; business?&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt; keyword has a few issues that have been corrected by the new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; keyword. First of all, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt; may be hoisted like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;bla&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// is identical to:&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;bla&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Second of all, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;-defined variables have the scope of &lt;em&gt;entire&lt;/em&gt; enclosing function.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;varExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// same variable!&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; keyword avoids all of this weirdness. When you use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; there is no hoisting, so you will get a ReferenceError at runtime:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ReferenceError: c is not defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Variables declared with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; are block-scoped, not function scoped. A block is any section of code delimited with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{ ... }&lt;/code&gt;. Here’s an example:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ReferenceError: a is not defined.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;what-about-const&quot;&gt;What about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;?&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt; keyword follows the same scoping and (non-) hoisting rules as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;. It has one more constraint, though: variables declared with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt; don’t change their reference.&lt;/p&gt;

&lt;p&gt;Here’s a few examples:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// TypeError: assignment to a constant variable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s also important to realize that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt; doesn’t enforce immutability for objects. You &lt;em&gt;can&lt;/em&gt; change object properties of objects declared with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;use strict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MY_OBJECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;MyProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;MY_OBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyProp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// no error here!&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MY_OBJECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;refactoring-recommendation&quot;&gt;Refactoring recommendation&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;If it is possible to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;, use it. If it isn’t possible to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt;, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt;. Don’t use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt; anymore, unless you find some crazy edge-case where it is necessary.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;arrow-functions&quot;&gt;Arrow functions&lt;/h2&gt;
&lt;p&gt;Arrow functions are a shorthand for writing small, anonymous functions. They also adopt the scope of their surrounding code, rather than creating a new one. This can eliminate use of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var self = this;&lt;/code&gt; pattern, and eliminate some uses of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bind()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Arrow functions also have a further-shortened version for implicitly returning the value of an expression. This is great for iterators and lodash-style functional programming.&lt;/p&gt;

&lt;p&gt;Here are some examples:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// These are all equivalent:&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// expression (i + 1) must be on one line&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// also must be on one line&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// all return [2, 3, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here’s an example of the way &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; works with arrow functions:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; 0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// (wait a few seconds)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; still 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You could fix this with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self&lt;/code&gt;, but that is annoying. Arrow functions make this easier:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// (wait a few seconds)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -&amp;gt; not zero&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are a few other differences with arrow functions that are more obscure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Within the arrow function, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arguments&lt;/code&gt; refers to the surrounding function, not to the argument list of the arrow function.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.call()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bind()&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.apply()&lt;/code&gt; cannot change the scope of an arrow function. They still work otherwise (and have the same function signatures themselves). If you use them, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt; within the arrow function will just be unchanged.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;refactoring-recommendation-1&quot;&gt;Refactoring recommendation&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Use arrow functions extensively. They are way better. One important thing to note, however, is that you still must use the anonymous-function syntax for method declarations:&lt;/p&gt;
  &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let MyClass = BaseClass.extend({
   myMethod: function() {
      return 'the return';
   }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;template-strings&quot;&gt;Template strings&lt;/h2&gt;
&lt;p&gt;Template strings are common in other programming languages (Like PHP, Python, and Ruby). They let you avoid code like this, which is extremely prone to errors and typos:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With template strings you can write:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Template strings start and end with backticks (&lt;code&gt;`&lt;/code&gt;). You can put any expression within the templates:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`2 plus &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &quot;2 plus 2 is 4&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Template strings can also be multi-line:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`This is a
multi-line string`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// -&amp;gt; &quot;This is a\nmulti-line string&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;refactoring-recommendation-2&quot;&gt;Refactoring recommendation&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Use template strings in most cases where you would normally use string concatenation. Definitely use template strings for multi-line strings. They are particularly useful for inline templates in Angular directives.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;new-string-methods&quot;&gt;New String methods&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt; class has a few new useful methods. The most useful ones are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;haystack.includes(needle)&lt;/code&gt; - tests if a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;haystack&lt;/code&gt; includes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;needle&lt;/code&gt;. No more &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;haystack.indexOf(needle)&lt;/code&gt;!&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;haystack.startsWith(needle)&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;haystack.endsWith(needle)&lt;/code&gt; - self explanatory.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'test '.repeat(3)&lt;/code&gt; - returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'test test test '&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;refactoring-recommendation-3&quot;&gt;Refactoring recommendation&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Definitely use these methods instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;indexOf()&lt;/code&gt; for checking for substrings. They are much more readable.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Create an EEG Spectrogram with Python</title>
   <link href="/2016/01/how-to-create-an-eeg-spectrogram-with-python"/>
   <updated>2016-01-05T01:47:18+00:00</updated>
   <id>/2016/01/how-to-create-an-eeg-spectrogram-with-python</id>
   <content type="html">&lt;p&gt;I recently got a &lt;a href=&quot;http://www.amazon.com/NeuroSky-MindWave-Mobile-BrainWave-Starter/dp/B00B8BF4EM/ref=pd_sim_23_2?ie=UTF8&amp;amp;dpID=41o3rl5m2dL&amp;amp;dpSrc=sims&amp;amp;preST=_AC_UL160_SR160%2C160_&amp;amp;refRID=0VGRK15RHHK9ZTE37448&quot;&gt;Neurosky Mindwave&lt;/a&gt;, which measures EEG waves and sends them via Bluetooth to your computer or phone.&lt;/p&gt;

&lt;p&gt;Busting out some of my rusty signal processing from college, I made a spectrogram from the EEG. Check it out!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2016/01/eeg-731-b1ab2ef72.png&quot; srcset=&quot;/generated/wp/uploads/2016/01/eeg-400-b1ab2ef72.png 400w, /generated/wp/uploads/2016/01/eeg-600-b1ab2ef72.png 600w, /generated/wp/uploads/2016/01/eeg-731-b1ab2ef72.png 731w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To check out how I made this, see this &lt;a href=&quot;https://gist.github.com/afiedler/6e498d2981ea7b788b61&quot;&gt;IPython notebook&lt;/a&gt;. This is using Jupyter and Python 3, with data recorded using &lt;a href=&quot;https://github.com/afiedler/node-thinkgear-sockets&quot;&gt;node-thinkgear-sockets&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Parse Sketch Files with NodeJS</title>
   <link href="/2015/12/the-sketch-file-format"/>
   <updated>2015-12-11T20:45:59+00:00</updated>
   <id>/2015/12/the-sketch-file-format</id>
   <content type="html">&lt;p&gt;I’ve recently been working more with &lt;a href=&quot;https://www.sketchapp.com/&quot;&gt;Sketch&lt;/a&gt;, and wanted to see if I could get Sketch files to render on Linux. Turns out that no one has released open-source software to parse or open Sketch files yet, so I decided to see how hard it would be to parse them with NodeJS.&lt;/p&gt;

&lt;p&gt;Here’s the results of my efforts: &lt;a href=&quot;https://github.com/afiedler/sketch-node-parser&quot;&gt;Github Project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This needs more work to make it usable, but Sketch files aren’t too difficult to deal with.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Two Resources to Learn About Copywriting</title>
   <link href="/2015/12/two-resources-to-learn-about-copywriting"/>
   <updated>2015-12-07T20:01:04+00:00</updated>
   <id>/2015/12/two-resources-to-learn-about-copywriting</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;a href=&quot;https://www.google.com/design/spec/style/writing.html&quot;&gt;Google Material Design Guidelines for Writing&lt;/a&gt;. The whole Material Design style guide is a good read to learn about UX, but the writing section is excellent to learn about writing clear, concise copy for user interface.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.canadaone.com/ezine/feb02/advertising_copy.html&quot;&gt;Key Questions to Ask Before Writing &amp;amp; Before Testing Advertising Copy&lt;/a&gt;. This article has an excellent description of the difference between inductive and deductive writing strategies. When technical experts write, they typically do so in a deductive way, leading the reader through a logic argument that culminates in the conclusion. That might not work well for advertising copy, and this article explains why.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Where Should I Host My Single Page App?</title>
   <link href="/2015/11/single-page-app-hosting"/>
   <updated>2015-11-12T15:45:44+00:00</updated>
   <id>/2015/11/single-page-app-hosting</id>
   <content type="html">&lt;p&gt;If you are working on an MVP web app these days, chances are you are using a single page app (SPA) framework like Angular, React, or EmberJS. These frameworks are great for a lot of reasons, one being that you can typically host the front-end with just a static file webserver like NGINX or Apache.&lt;/p&gt;

&lt;p&gt;Maintaining a webserver is still probably not the best use of your time when you are trying to get your MVP out the door, and hosting a SPA is a little more complex than just a static HTML site. There are a lot of shortcuts out there (such as using Amazon S3) and a few hosted platforms are emerging. Read on to see a comparison of the current solutions, and leave a comment if you know of any others!&lt;/p&gt;

&lt;style&gt;
&lt;!--
  #hosts td,th {
    font-size: 10pt;
  }
  #hosts th {
    background-color: #555;
    color: #efefef;
  }
  #hosts th a {
    color: #efefef;
    border-bottom: 1px solid #efefef;
  }
  #hosts tr td:first-child {
    background-color: #ddd;
  }
  #hosts td.pain-low {
    background-color: #D9EAD3;
  }
  #hosts td.pain-medium {
    background-color: #FFE599;
  }
  #hosts td.pain-high {
    background-color: #F9CB9C;
  }
  #hosts td.pain-extreme {
    background-color: #EA9999;
  }
--&gt;
&lt;/style&gt;

&lt;table id=&quot;hosts&quot;&gt;
  &lt;colgroup&gt;
    &lt;col span=&quot;1&quot; style=&quot;width: 40%;&quot; /&gt;
    &lt;col span=&quot;1&quot; style=&quot;width: 60%;&quot; /&gt;
  &lt;/colgroup&gt;
  &lt;tbody&gt;
    &lt;!-- ### Amazon S3 + Cloudfront --&gt;
    &lt;tr&gt;
      &lt;th colspan=&quot;2&quot;&gt;Amazon S3 + Cloudfront&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ease of deployment&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Can be made to work well with &lt;a href=&quot;https://github.com/jpillora/grunt-aws&quot; target=&quot;_blank&quot;&gt;grunt&lt;/a&gt;/&lt;a href=&quot;https://www.npmjs.com/package/gulp-awspublish&quot; target=&quot;_blank&quot;&gt;gulp&lt;/a&gt; plugins&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Avoids writing or maintaining a webserver&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serves files using a CDN&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL on your own domain&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;&lt;a href=&quot;https://aws.amazon.com/cloudfront/custom-ssl-domains/&quot; target=&quot;_blank&quot;&gt;Yes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Supports pre-rendering for bots&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTML5 pushState support&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;&lt;a href=&quot;http://blog.boushley.net/2015/10/29/html5-deep-link-on-amazon-s3/&quot; target=&quot;_blank&quot;&gt;Sorta, by making index.html the default 404 error page&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxies backend to avoid CORS issues&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Price for a basic, production site&lt;/td&gt;
      &lt;td&gt;Depends on traffic, but very cheap&lt;/td&gt;
    &lt;/tr&gt;
    &lt;!-- ### Amazon S3 + MaxCDN --&gt;
    &lt;tr&gt;
      &lt;th colspan=&quot;2&quot;&gt;Amazon S3 + &lt;a href=&quot;https://www.maxcdn.com/&quot; target=&quot;_blank&quot;&gt;MaxCDN&lt;/a&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ease of deployment&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Can be made to work well with grunt/gulp plugins&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Avoids writing or maintaining a webserver&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serves files using a CDN&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL on your own domain&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Supports pre-rendering for bots&lt;/td&gt;
      &lt;td class=&quot;pain-high&quot;&gt;Not really. Possible to make Googlebot work with EdgeRules.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTML5 pushState support&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes, and can fix 404 issue with &lt;a href=&quot;https://www.maxcdn.com/features/rules/&quot; target=&quot;_blank&quot;&gt;EdgeRules&lt;/a&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxies backend to avoid CORS issues&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Price for a basic, production site&lt;/td&gt;
      &lt;td&gt;$15/month + S3 charges (minimal). Call for EdgeRules pricing.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;!-- ### Firebase Hosting --&gt;
    &lt;tr&gt;
      &lt;th colspan=&quot;2&quot;&gt;&lt;a href=&quot;https://www.firebase.com/hosting.html&quot; target=&quot;_blank&quot;&gt;Firebase Hosting&lt;/a&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ease of deployment&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Has it's own deployment tools that support immutable deploys and rollbacks&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Avoids writing or maintaining a webserver&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serves files using a CDN&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL on your own domain&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Supports pre-rendering for bots&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTML5 pushState support&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxies backend to avoid CORS issues&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Price for a basic, production site&lt;/td&gt;
      &lt;td&gt;$5/month&lt;/td&gt;
    &lt;/tr&gt;
    &lt;!-- ### Aerobatic --&gt;
    &lt;tr&gt;
      &lt;th colspan=&quot;2&quot;&gt;&lt;a href=&quot;http://www.aerobatic.com/&quot; target=&quot;_blank&quot;&gt;Aerobatic&lt;/a&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ease of deployment&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Easy, git-push deploy using Bitbucket&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Avoids writing or maintaining a webserver&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serves files using a CDN&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL on your own domain&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Supports pre-rendering for bots&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTML5 pushState support&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxies backend to avoid CORS issues&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Price for a basic, production site&lt;/td&gt;
      &lt;td&gt;$10/month for 5 sites&lt;/td&gt;
    &lt;/tr&gt;
    &lt;!-- ### Custom Server on Heroku --&gt;
    &lt;tr&gt;
      &lt;th colspan=&quot;2&quot;&gt;Custom Server on Heroku&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ease of deployment&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Easy, git-push deploy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Avoids writing or maintaining a webserver&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serves files using a CDN&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL on your own domain&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Supports pre-rendering for bots&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTML5 pushState support&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxies backend to avoid CORS issues&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Price for a basic, production site&lt;/td&gt;
      &lt;td&gt;$25/month + $20/month for SSL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;!-- ### Custom Server on Heroku + CloudFront --&gt;
    &lt;tr&gt;
      &lt;th colspan=&quot;2&quot;&gt;Custom Server on Heroku + CloudFront&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ease of deployment&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Easy, git-push deploy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Avoids writing or maintaining a webserver&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serves files using a CDN&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL on your own domain&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Supports pre-rendering for bots&lt;/td&gt;
      &lt;td class=&quot;pain-high&quot;&gt;&lt;a href=&quot;http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html&quot; target=&quot;_blank&quot;&gt;Potentially possible by adjusting caching based on User-Agent&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTML5 pushState support&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxies backend to avoid CORS issues&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Price for a basic, production site&lt;/td&gt;
      &lt;td&gt;$25/month + traffic-based charges for CloudFront (very cheap)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;!-- ### Custom Server on Heroku + MaxCDN --&gt;
    &lt;tr&gt;
      &lt;th colspan=&quot;2&quot;&gt;Custom Server on Heroku + CloudFront&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ease of deployment&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Easy, git-push deploy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Avoids writing or maintaining a webserver&lt;/td&gt;
      &lt;td class=&quot;pain-extreme&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Serves files using a CDN&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL on your own domain&lt;/td&gt;
      &lt;td class=&quot;pain-low&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Supports pre-rendering for bots&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible with EdgeRules&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTML5 pushState support&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Proxies backend to avoid CORS issues&lt;/td&gt;
      &lt;td class=&quot;pain-medium&quot;&gt;Possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Price for a basic, production site&lt;/td&gt;
      &lt;td&gt;$25/month + MaxCDN charges (see Amazon + MaxCDN section)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;So what’s my recommendation? If don’t need your app to be indexed on Google, &lt;a href=&quot;https://developers.facebook.com/tools/debug/&quot; target=&quot;_blank&quot;&gt;show previews on Facebook’s Open Graph&lt;/a&gt;, or &lt;a href=&quot;https://dev.twitter.com/cards/getting-started&quot; target=&quot;_blank&quot;&gt;show cards on Twitter&lt;/a&gt;, both Firebase Hosting and Aerobatic are good options. In theory, Googlebot is starting to crawl SPAs, but in practice I have not had good luck with that. The other crawlers seem to be far behind Google, so you’ll likely need pre-rendered pages, anyway.&lt;/p&gt;

&lt;p&gt;If you do need to support bots by serving pre-rendered HTML, you are unfortunately at a real loss. I think your best option in that case is to host your front-end on Heroku (using NGINX, Express, Hapi, or some other simple server), and use a service like &lt;a href=&quot;https://prerender.io/&quot; target=&quot;_blank&quot;&gt;Prerender.io&lt;/a&gt; to serve pre-rendered HTML to bots. See &lt;a href=&quot;https://gist.github.com/thoop/8165802&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; for how you would set up Prerender.io using NGINX. Alternatively, you can let the Firebase Hosting guys know that you really want pre-rendering support in &lt;a href=&quot;https://github.com/firebase/firebase-tools/issues/33&quot; target=&quot;_blank&quot;&gt;this PR&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How much space does Postgres's new JSONB format save?</title>
   <link href="/2015/09/how-much-space-does-postgress-new-jsonb-format-save"/>
   <updated>2015-09-10T19:42:55+00:00</updated>
   <id>/2015/09/how-much-space-does-postgress-new-jsonb-format-save</id>
   <content type="html">&lt;p&gt;Postgres 9.4 has a new column format called “JSONB” that is a binary representation of JSON. The coolest thing about this new column type is that it supports indexes, so you can now query JSON columns much faster. However, a side benefit is that it is also slightly smaller. I recently did a test where I took a 53 MB table of mostly JSON data and converted it to JSONB. Before and after the conversion I did a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VACUUM FULL&lt;/code&gt; on the table. Space savings was about 12.3%.&lt;/p&gt;

&lt;p&gt;Just one observation you might want to consider if you are thinking about switching formats.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Export a Heroku Postgres Schema</title>
   <link href="/2015/09/export-a-heroku-postgres-schema"/>
   <updated>2015-09-10T17:58:45+00:00</updated>
   <id>/2015/09/export-a-heroku-postgres-schema</id>
   <content type="html">&lt;p&gt;This is a quick script to export just the schema from a Heroku Postgres database. It exports the schema with no ownership information, so you can easily load it into a local database.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'uri'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`heroku config:get DATABASE_URL`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;export PGPASSWORD=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&quot;pg_dump --schema-only -h &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -p &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
       &lt;span class=&quot;s2&quot;&gt;&quot;-U &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -d &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --no-owner -f schema.sql&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make sure you run this script from a folder within your app (with the Heroku git remote correctly set up). It will put the schema in schema.sql in the current working directory.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Friday Links</title>
   <link href="/2015/08/friday-links"/>
   <updated>2015-08-07T15:16:23+00:00</updated>
   <id>/2015/08/friday-links</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Music I’m rocking out to&lt;/strong&gt; – &lt;a href=&quot;https://open.spotify.com/track/5dCQryKQ6LPT50PBXnZfQy&quot;&gt;Two Hearts&lt;/a&gt; by The Features and &lt;a href=&quot;https://open.spotify.com/track/2sNvitW3TxiTeC9xT9f2ZZ&quot;&gt;Firestone&lt;/a&gt; by Kygo.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interesting read&lt;/strong&gt; – The NYTimes has a &lt;a href=&quot;http://www.nytimes.com/2015/08/08/us/politics/fox-news-moderators-bring-a-sharpened-edge-to-gop-debate-stage.html?_r=0&quot;&gt;great article&lt;/a&gt; praising the Fox News coverage of the Republican debate. I agree with it, the Fox moderators were almost Jon Stewart-esque!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tools and tech&lt;/strong&gt; – I’ve been experimenting with different development environments for NodeJS, and the winner so far is JetBrain’s &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt;. Code completion support is excellent, and the integrated Node debugger is a huge time saver. At $49, it’s a no-brainer if you do any kind of Javascript development.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Analytics with AngularJS and UI-Router</title>
   <link href="/2015/07/google-analytics-with-angularjs-and-ui-router"/>
   <updated>2015-07-29T16:54:59+00:00</updated>
   <id>/2015/07/google-analytics-with-angularjs-and-ui-router</id>
   <content type="html">&lt;p&gt;I helped &lt;a href=&quot;http://www.cleanslatedc.com/&quot;&gt;Clean Slate DC&lt;/a&gt; add Google Analytics to their app last night at &lt;a href=&quot;http://codefordc.org&quot;&gt;Code For DC&lt;/a&gt; and realized others might not know how to do this. It’s pretty simple, but you won’t want to follow the directions on Google Analytics exactly. Instead, add this to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt; or main page &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, replacing your UA code with the UA code that Google gives you:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Google Analytics --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;GoogleAnalyticsObject&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;//www.google-analytics.com/analytics.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;UA-XXXX-X&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- End Google Analytics --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, add a service to your Angular project:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Analytics&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recordPageview&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pageview&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, add a run block near where your app starts:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$rootScope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$rootScope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$stateChangeSuccess&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;recordPageview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There you go!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>2015 State of DevOps - PwC and Puppet Labs Report</title>
   <link href="/2015/07/2015-state-of-devops-pwc-and-puppet-labs-report"/>
   <updated>2015-07-22T20:41:19+00:00</updated>
   <id>/2015/07/2015-state-of-devops-pwc-and-puppet-labs-report</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://puppetlabs.com/sites/default/files/2015-state-of-devops-report.pdf&quot;&gt;This is a really interesting report on how to have high performing dev teams&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fixing SyntaxHighlighter Evolved Font Size</title>
   <link href="/2015/07/fixing-syntaxhighlighter-evolved-font-size"/>
   <updated>2015-07-22T15:18:40+00:00</updated>
   <id>/2015/07/fixing-syntaxhighlighter-evolved-font-size</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://wordpress.org/plugins/syntaxhighlighter/&quot;&gt;SyntaxHighlighter Evolved&lt;/a&gt; is currently the plugin I use for syntax highlighting on this site. It uses the default text size for code blocks, which doesn’t look great since code is in a fixed-width font. To fix that, add a class to the code blocks called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code-blk&lt;/code&gt; in &lt;strong&gt;Settings &amp;gt; SyntaxHighlighter&lt;/strong&gt;. Then modify your theme’s CSS (or use the Wordpress Jetpack Custom CSS feature) to add CSS like this:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.code-blk&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10pt&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;http://matthewturland.com/2012/02/13/wordpress-syntaxhighlighter-font-size-fix/&quot;&gt;this post&lt;/a&gt; for the inspiration.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gotchas with Hapi's Code Library</title>
   <link href="/2015/07/gotchas-with-hapis-code-library"/>
   <updated>2015-07-22T14:06:32+00:00</updated>
   <id>/2015/07/gotchas-with-hapis-code-library</id>
   <content type="html">&lt;p&gt;Overall, I’ve had a good experience with HapiJS and Code, Hapi’s assertion library. There was one gotcha with Code’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deep.equal&lt;/code&gt; function. If you are comparing two objects that have identical non-function properties, but different function properties, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deep.equal&lt;/code&gt; will fail. So, for example, if you compare a Hapi response to a Plain Old Javascript Object fixture, you will get an exception.&lt;/p&gt;

&lt;p&gt;The solution is to strip the non-function properties before comparing:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// response - an object with some function properties&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// fixture - a Plain Old Javascript Object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responsePojo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responsePojo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fixture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>NodeJS and Hapi for Rails Developers</title>
   <link href="/2015/07/nodejs-and-hapi-for-rails-developers"/>
   <updated>2015-07-22T13:59:48+00:00</updated>
   <id>/2015/07/nodejs-and-hapi-for-rails-developers</id>
   <content type="html">&lt;p&gt;This post is an &lt;strong&gt;work in progress&lt;/strong&gt; list of tips and tricks I’ve learned working on a HapiJS API after mostly coding Rails APIs for the last few years. I expect to update it as I learn more.&lt;/p&gt;

&lt;p&gt;If you are a Rails developer looking to transition to NodeJS, hopefully this will save you some time. If you are a more seasoned NodeJS or Hapi developer and have suggestions for improving this, please let me know in the comments.&lt;/p&gt;

&lt;h2 id=&quot;async-programming&quot;&gt;Async Programming&lt;/h2&gt;

&lt;h3 id=&quot;error-first-callbacks-promises-or-asyncawait&quot;&gt;Error-first callbacks, promises, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;async&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;await&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Most Rails developers have written some Javascript, so you are probably familiar with callbacks. On the client, having nested callbacks is relatively rare. On the server, however, they are far more common. A simple example would be a server method that needs to make a handful of database calls, with all of the depending on the outcome of the others. This would be trivial to write in a sequential way, but with NodeJS, you will need to nest callbacks to accomplish the same thing.&lt;/p&gt;

&lt;p&gt;This is both the best thing about NodeJS and the most annoying. It makes things very performant, because with callbacks you continually return control to the main event loop, freeing the main thread to move on to other things. In Rails, unless you are using a threaded server like Puma, waiting on a database call will block the entire process.&lt;/p&gt;

&lt;p&gt;All of Node core and most of the libraries use error-first callbacks. If the first argument to the callback function is truthy, then you know the callback has failed with an error. You’ll see a lot of code in NodeJS like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myCallbackFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// process the result&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This gets nasty when you have many nested callbacks and has been dubbed “callback hell”.&lt;/p&gt;

&lt;p&gt;One way to fix this is to use a promise. You can typically turn any error-first callback function into a promise-returning function with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Promise.promisify()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bluebird&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// bluebird is a popular promise library&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myAsyncFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promisify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myCallbackFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myAsyncFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// process result&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// process error&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This doesn’t look Earth-shattering, but promises can make deeply nested callbacks more readable. I like promises from my AngularJS programming, but they aren’t widely used in the Node community. If you attempt to use them, you feel like you are fighting an uphill battle since everyone still uses error-first callbacks. They can be vital in some situations, however.&lt;/p&gt;

&lt;h4 id=&quot;es7-and-asyncawait&quot;&gt;ES7 and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;async&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;await&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The next generation of Javascript will hopefully solve all of our problems with the addition of two new keywords: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;async&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;await&lt;/code&gt;. These use promises under the hood, but you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;try&lt;/code&gt;-&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;catch&lt;/code&gt; and don’t need &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;then()&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myAsyncFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// process result&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// handle error&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can use this today if you transpile with the Traceur compiler, but not much of the Node community is doing that yet. Once more people get on board, this will be a &lt;em&gt;huge&lt;/em&gt; improvement in Javascript.&lt;/p&gt;

&lt;h4 id=&quot;what-do-do-today&quot;&gt;What do do today?&lt;/h4&gt;
&lt;p&gt;Today, I think you should stick with error-first callbacks and use promises if absolutely necessary. Another library you can look into is the &lt;a href=&quot;https://github.com/caolan/async&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;async&lt;/code&gt;&lt;/a&gt; library, which gives you lots of nice functions to handle many callbacks in series or parallel.&lt;/p&gt;

&lt;h2 id=&quot;unit-testing&quot;&gt;Unit Testing&lt;/h2&gt;

&lt;h3 id=&quot;npm-packages-to-use&quot;&gt;NPM packages to use&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hapijs/lab&quot;&gt;Lab&lt;/a&gt; - Hapi’s unit testing framework. It supports both TestUnit and RSpec style tests. I’m using the RSpec style.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hapijs/code&quot;&gt;Code&lt;/a&gt; - An assertion library. This handles &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expect&lt;/code&gt; statements. There are a &lt;a href=&quot;http://andyfiedler.com/blog/gotchas-with-hapis-code-library-327/&quot;&gt;few gotchas&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;test-folder-setup&quot;&gt;Test folder setup&lt;/h3&gt;
&lt;p&gt;I’m using RSpec style tests, so my folder hierarchy looks like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+ /
|
+---specs
|
+---requests
| |
| +---users
| |
| +---get.js
|
+---models
|
+---user.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;running-your-specs&quot;&gt;Running your specs&lt;/h3&gt;
&lt;p&gt;To run your specs, you have two choices. You can either install lab globally and run them with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lab&lt;/code&gt; command, or you can change your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file to set what to run for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm test&lt;/code&gt;. I usually do the second options, because it lets me specify some default options for lab. Here’s what the section of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file looks like:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;env $(cat .env | xargs) lab -v -L -m 0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xargs&lt;/code&gt; part is to set the environmental variables before running the tests from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env&lt;/code&gt; file. There probably is a better way to do this, but that is working for now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting Node-Inspector to work with Lab&#47;HapiJS</title>
   <link href="/2015/07/getting-node-inspector-to-work-with-labhapijs"/>
   <updated>2015-07-17T18:37:41+00:00</updated>
   <id>/2015/07/getting-node-inspector-to-work-with-labhapijs</id>
   <content type="html">&lt;p&gt;Debugging specs with console.log statements is a real pain. Node-Inspector is far better, giving you an environment that is basically the same as Chrome DevTools.&lt;/p&gt;

&lt;p&gt;To use it with Lab, add this script to your package.json file:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// other package.json stuff&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test-debug&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;node-debug ./node_modules/.bin/lab&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can now run all of your specs with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run test-debug&lt;/code&gt; , or run the specs in just one file with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run test-debug &amp;lt;path to your spec file&amp;gt;.js&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Reactive UI Reading List</title>
   <link href="/2015/07/reactive-ui-reading-list"/>
   <updated>2015-07-16T20:59:11+00:00</updated>
   <id>/2015/07/reactive-ui-reading-list</id>
   <content type="html">&lt;p&gt;These are just a few articles to read about Reactive UIs on OSX. The more I read about it, the more functional, declarative UIs seem like the way forward.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://componentkit.org/&quot;&gt;ComponentKit&lt;/a&gt; is like React Native, but in Objective C++. Someone &lt;a href=&quot;https://github.com/darknoon/componentkitx&quot;&gt;ported it to OS X&lt;/a&gt;! But you cannot use it with Swift, yet.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://rauchg.com/2015/pure-ui/&quot;&gt;Pure UI&lt;/a&gt; - the merits of React as a programming model.&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://github.com/joshaber/Few.swift&quot;&gt;Few.swift&lt;/a&gt; - Similar to ComponentKit, but in Swift. Not used in production yet.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Node datapipes to ETL from one MongoDB collection to a second MongoDB collection</title>
   <link href="/2015/07/using-node-datapipes-to-etl-from-one-mongodb-to-a-second-mongodb"/>
   <updated>2015-07-15T20:14:01+00:00</updated>
   <id>/2015/07/using-node-datapipes-to-etl-from-one-mongodb-to-a-second-mongodb</id>
   <content type="html">&lt;p&gt;ETL - not the most fun to write, but the &lt;a href=&quot;https://www.npmjs.com/package/datapipes&quot;&gt;datapipes&lt;/a&gt; package makes it pretty easy on NodeJS.&lt;/p&gt;

&lt;p&gt;One thing that wasn’t explained in the documentation well was how to ETL from one MongoDB to another using the MongodbMixin. The problem when you use the MongodbMixin twice in the same pipe is that it gets confused about which connection to use for which things. Here’s how to use pipe groups to fix that.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;etlProcess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;datapumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;extractPump&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;etlProcess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addPump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;extractPump&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mixin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MongodbMixin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sourceDbUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sourceCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extractPump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({}));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// take all items from sourceCollection&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;upsertPump&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;etlProcess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addPump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;upsert&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;upsertPump&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extractPump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mixin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MongodbMixin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sinkDbUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sinkDbCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; - ETLing &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// need to return a promise from process&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;upsertPump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;upsert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;


&lt;span class=&quot;nx&quot;&gt;etlProcess&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logErrorsToConsole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;whenFinished&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;finished ETLing.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>The easiest way to make a landing page</title>
   <link href="/2015/07/the-easiest-way-to-make-a-landing-page"/>
   <updated>2015-07-14T21:34:38+00:00</updated>
   <id>/2015/07/the-easiest-way-to-make-a-landing-page</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Clone &lt;a href=&quot;https://github.com/swcool/landing-page-theme&quot; target=&quot;_blank&quot;&gt;this git repo&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;nums:false lang:default decode:true&quot;&gt;git clone git@github.com:swcool/landing-page-theme.git&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 2: &lt;/strong&gt;Get Jekyll.&lt;/p&gt;
&lt;pre class=&quot;nums:false lang:default decode:true&quot;&gt;gem install jekyll&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 3: &lt;/strong&gt;Edit the repo with &lt;a href=&quot;https://atom.io&quot; target=&quot;_blank&quot;&gt;Atom&lt;/a&gt;. See a live preview with Jekyll’s built-in server.&lt;/p&gt;
&lt;pre class=&quot;nums:false lang:default decode:true&quot;&gt;jekyll serve&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 4: &lt;/strong&gt;Host on &lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages/&quot; target=&quot;_blank&quot;&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5: &lt;/strong&gt;Profit?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Quick Tip: Fixing Postgres operator class "gin_trgm_ops" does not exist for access method "gin"</title>
   <link href="/2015/06/quick-tip-fixing-postgres-operator-class-gin_trgm_ops-does-not-exist-for-access-method-gin"/>
   <updated>2015-06-17T19:33:27+00:00</updated>
   <id>/2015/06/quick-tip-fixing-postgres-operator-class-gin_trgm_ops-does-not-exist-for-access-method-gin</id>
   <content type="html">&lt;p&gt;This error can show up when you are trying to load a schema into a new database in Postgres that has been dumped from a database with the pg_trgm extension. You can fix it by adding the extension to the template database (template1) so that when you create a new database, it is already there, ready to go.&lt;/p&gt;

&lt;p&gt;To do this, run this at the command line:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psql -d template1 -c 'create extension pg_trgm;'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Workaround: Google Apps for Business won't automatically add flights to your calendar</title>
   <link href="/2015/05/workaround-google-apps-for-business-wont-automatically-add-flights-to-your-calendar"/>
   <updated>2015-05-25T18:06:07+00:00</updated>
   <id>/2015/05/workaround-google-apps-for-business-wont-automatically-add-flights-to-your-calendar</id>
   <content type="html">&lt;p&gt;My personal gmail account has a great feature where it will automatically add flights to my calendar. It even figures out time zones, which is awesome.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://support.google.com/calendar/answer/6084018?hl=en&quot; target=&quot;_blank&quot;&gt;Google Apps for Business doesn’t have this feature&lt;/a&gt;, which is a shame. As a workaround, you can forward your flight confirmations from your work email to your personal Gmail account. Just be sure to change the title of the email so it doesn’t have the “Fwd:” prefix, and remove the froward headers from the email body (just select them and hit delete).&lt;/p&gt;

&lt;p&gt;Your personal Gmail will now think these are new flight confirmations and add them to your personal calendar! Here’s to hoping Google gets this feature in Google Apps for Business.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mapbox Studio Creation - OSM Hiking Map</title>
   <link href="/2015/05/mapbox-studio-creation-osm-hiking-map"/>
   <updated>2015-05-13T15:00:49+00:00</updated>
   <id>/2015/05/mapbox-studio-creation-osm-hiking-map</id>
   <content type="html">&lt;p&gt;I’ve been experimenting with &lt;a title=&quot;Mapbox Studio&quot; href=&quot;https://www.mapbox.com/mapbox-studio&quot; target=&quot;_blank&quot;&gt;Mapbox Studio&lt;/a&gt;, which is an awesome way to create maps without the pain of setting up a server or downloading Open Street Map data.&lt;/p&gt;

&lt;p&gt;The way Mapbox Studio works is that Mapbox has pre-rendered vector tiles from Open Street Map at all 22 standard zoom levels. Mapbox has also pre-rendered hill shading tiles and contour lines! You just need to style them with CartoCSS, which is as easy as it sounds (if you know CSS).&lt;/p&gt;

&lt;p&gt;They have a bunch of great starter styles, one of which is Mapbox Outdoors. I modified that to make it a little better for hiking by adjusting the trail labels and making trails more prominent.&lt;/p&gt;

&lt;p&gt;You can get the &lt;a title=&quot;Hiking Map CartoCSS&quot; href=&quot;https://github.com/afiedler/hiking-map.tm2&quot; target=&quot;_blank&quot;&gt;CartoCSS for the hiking map here&lt;/a&gt; and see a &lt;a title=&quot;Hiking Map Demo&quot; href=&quot;https://api.tiles.mapbox.com/v4/afiedler.e83d82a2/page.html?access_token=pk.eyJ1IjoiYWZpZWRsZXIiLCJhIjoiN2c5VFFRSSJ9.45nCmyDqG5vpSOuHnCj0qQ#15/38.9863/-77.2362&quot; target=&quot;_blank&quot;&gt;demo of the hiking map here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s Great Falls, Maryland with my changes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2015/05/great-falls-800-a9cb02b39.png&quot; srcset=&quot;/generated/wp/uploads/2015/05/great-falls-400-a9cb02b39.png 400w, /generated/wp/uploads/2015/05/great-falls-600-a9cb02b39.png 600w, /generated/wp/uploads/2015/05/great-falls-800-a9cb02b39.png 800w, /generated/wp/uploads/2015/05/great-falls-1000-a9cb02b39.png 1000w&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Lodash&#47;Underscore on Google App Script</title>
   <link href="/2015/03/lodashunderscore-on-google-app-script"/>
   <updated>2015-03-12T19:02:25+00:00</updated>
   <id>/2015/03/lodashunderscore-on-google-app-script</id>
   <content type="html">&lt;p&gt;I’ve recently been working on a Google App Script project, and wanted to use Underscore or Lodash because writing Javascript is relatively painful without those libraries. The problem is that Lodash does a lot of feature detection by trying to throw exceptions, and the Google App Script debugger pauses on all exceptions.&lt;/p&gt;

&lt;p&gt;The fix is to just modify Lodash slightly to hard-code the Google App Script features that throw exceptions. This isn’t too hard to do, but it is a pain, so I’ve posted my &lt;a title=&quot;Lodash modified for Google App Script&quot; href=&quot;https://gist.github.com/afiedler/261a20ac4c7e7befc40e&quot; target=&quot;_blank&quot;&gt;modified version of Lodash as a Gist here&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Two Cool Tools for Technology Consultants</title>
   <link href="/2015/03/two-new-cool-tools-for-technology-consultants"/>
   <updated>2015-03-06T15:16:44+00:00</updated>
   <id>/2015/03/two-new-cool-tools-for-technology-consultants</id>
   <content type="html">&lt;h4&gt;1) InVision and Sketch&lt;/h4&gt;
&lt;p&gt;I’ve been making a lot of simple prototypes in the last few weeks, and the combination of tools that has been working best for me is &lt;a href=&quot;http://bohemiancoding.com/sketch/&quot; target=&quot;_blank&quot;&gt;Sketch 3&lt;/a&gt; and &lt;a href=&quot;http://www.invisionapp.com/&quot; target=&quot;_blank&quot;&gt;InVision&lt;/a&gt;. Sketch is a simple drawing program like Illustrator that you can use to make mockups. It allows you to have one file with multiple pages, which you can use for multiple screens in your app.&lt;/p&gt;

&lt;p&gt;InVision is a very simple online tool to create clickable prototypes. There are lots of these tools, and here is a good comparison, but for me, InVision has been working best because it is very simple. The way InVision works is you upload a bunch of screens and then draw boxes on them that become “hotlinks” to navigate to other screens. You cannot make more complex interactions, like with a tool like Axure, but for the simple prototypes I have been doing, this is all I need. You can learn to use InVision in about 10 minutes, while it took me 3-4 hours to figure out what the heck was going with Axure (not to knock Axure; it’s very powerful and is the right tool for the job sometimes).&lt;/p&gt;

&lt;p&gt;The cool thing with the pair of InVision and Sketch is that you can just drag and drop your Sketch file into InVision, and InVision will create or &lt;em&gt;update&lt;/em&gt; your screens. That means your revision workflow is very easy: make or update drawings in Sketch → save the file → drag the file to InVision.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.10.32-AM-602-cada5c28b.png&quot; srcset=&quot;/generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.10.32-AM-400-cada5c28b.png 400w, /generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.10.32-AM-600-cada5c28b.png 600w, /generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.10.32-AM-602-cada5c28b.png 602w&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h4&gt;2) IPython, IRuby, Jupyter&lt;/h4&gt;
&lt;p&gt;If you have ever used a REPL and wished it had more of a GUI, you should definitely check out &lt;a href=&quot;http://ipython.org/&quot; target=&quot;_blank&quot;&gt;IPython&lt;/a&gt; or &lt;a href=&quot;https://github.com/minad/iruby&quot; target=&quot;_blank&quot;&gt;IRuby&lt;/a&gt; (and the upcoming project &lt;a href=&quot;http://jupyter.org/&quot; target=&quot;_blank&quot;&gt;Jupyter&lt;/a&gt;). I used IPython in the past, but I’ve been mostly coding Ruby recently. I didn’t realize that there is a very good Ruby counterpart called IRuby that is extremely powerful.&lt;/p&gt;

&lt;p&gt;It turns out that IPython is morphing into Jupyter, which aims to be language-agnostic. This could be very cool: think IPython for NodeJS, R, or other languages, and more front-ends that work with any language!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.14.12-AM-643-a7db5f93b.png&quot; srcset=&quot;/generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.14.12-AM-400-a7db5f93b.png 400w, /generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.14.12-AM-600-a7db5f93b.png 600w, /generated/wp/uploads/2015/03/Screen-Shot-2015-03-06-at-10.14.12-AM-643-a7db5f93b.png 643w&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Hacking Sleep</title>
   <link href="/2015/02/hacking-sleep"/>
   <updated>2015-02-27T15:34:00+00:00</updated>
   <id>/2015/02/hacking-sleep</id>
   <content type="html">&lt;p&gt;I’ve been hearing more and more about the importance of sleep, so as part of trying to be healthier in general I decided to see what I could do to sleep better. A lot of the stuff I tried is based on Tim Ferriss’s &lt;a href=&quot;http://www.amazon.com/The-4-Hour-Body-Incredible-Superhuman/dp/0307704610&quot;&gt;&lt;em&gt;Four Hour Body&lt;/em&gt;&lt;/a&gt;, and I’d definitely recommend the chapter on sleep to anyone who is interested in hacking theirs, too.&lt;/p&gt;

&lt;p&gt;I organized these by what I think worked the best for me, but since I tried a lot of things at once, it’s hard to tease out the differences.&lt;/p&gt;

&lt;h2 id=&quot;make-your-bedroom-as-dark-as-possible&quot;&gt;Make your bedroom as dark as possible&lt;/h2&gt;
&lt;p&gt;My apartment is in a historic building, so the facade is lit up at night. While it looks impressive, it makes my bedroom bright even with blackout curtains. What I did to fix this was unfurl a blackout curtain and tack it to the edges of the window so there is practically no light that comes in. By no light, I mean I cannot even see my hand in front of my face. It does not look great, but it works!&lt;/p&gt;

&lt;p&gt;Try this first: remove all electronics with lights (even small LEDs) and black out your windows. Use a heavy blanket or aluminum foil and tape. It will look terrible, but if it helps, you can invest in better curtains later.&lt;/p&gt;

&lt;h2 id=&quot;test-66-70f-degrees-as-your-bedroom-temperature-with-a-thin-blanket&quot;&gt;Test 66-70F degrees as your bedroom temperature, with a thin blanket&lt;/h2&gt;
&lt;p&gt;This is from the &lt;em&gt;Four Hour Body&lt;/em&gt; and it really made a big difference for me. 64 degrees and I’ll wake up shivering, 72 degrees and I’ll sweat and wake up mildly dehydrated. Try 68 with a sheet and maybe a light blanket.&lt;/p&gt;

&lt;p&gt;Also, thermostats can be widely inaccurate so you might want to get a more accurate thermometer to test this. For example, if I set my thermostat to 65 degrees, its actually 72 in my bedroom. Try &lt;a href=&quot;http://www.amazon.com/gp/product/B0013BKDO8&quot;&gt;this one&lt;/a&gt; that I was using for a few months. It doesn’t really seem to help except maybe on the margins in the darkest days of winter.&lt;/p&gt;

&lt;h2 id=&quot;humidity-level-was-more-important-than-i-thought&quot;&gt;Humidity level was more important than I thought&lt;/h2&gt;

&lt;p&gt;I went skiing in the mountains a few weeks ago and got a cold due to the very dry air. I also slept really poorly. I thought - maybe humidity is screwing up my sleep at home, too.&lt;/p&gt;

&lt;p&gt;I had a humidifier that I never used, so I decided to try it. Turns out 40-45% relative humidity is ideal. This is also a narrow band like temperature. Below 40% and I’ll wake up with a dry throat and over 50% and everything feels somewhat damp in the morning. I actually sleep pretty well at 50-55% humidity, but I’m concerned about mold growing at that high of a level.&lt;/p&gt;

&lt;h2 id=&quot;eat-almond-butter-on-a-carrot-before-bed&quot;&gt;Eat almond butter on a carrot before bed&lt;/h2&gt;

&lt;p&gt;This idea is also from the &lt;em&gt;Four Hour Body&lt;/em&gt;. A lot times when I woke up feeling sluggish in the morning, I’d feel better after eating breakfast. I figured this was definitely blood sugar related, so I tried another 4HB suggestion-almond butter before bed.&lt;/p&gt;

&lt;p&gt;This worked well and mostly eliminated that groggy mornings. I found that the easiest way to do this was to buy a bag of carrots and a jar of almond butter. Eat one to two carrots, “double dipping” in the almond butter so you get the equivalent of three to four tablespoons. The carrots are great because there will be no spoons or plates to clean up, and takes less than 5 minutes.&lt;/p&gt;

&lt;h2 id=&quot;things-that-havent-caused-much-of-a-difference-for-me&quot;&gt;Things that haven’t caused much of a difference for me&lt;/h2&gt;

&lt;ul&gt;
	&lt;li class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Screen time before bed. I have &lt;a href=&quot;http://justgetflux.com&quot; target=&quot;_blank&quot;&gt;f.lux&lt;/a&gt; on my Mac and similar apps on my phone and tablet, so this might be a different story if I didn't have those.&lt;/span&gt;&lt;/li&gt;
	&lt;li class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Melatonin doesn't seem to do much for me, though I sometimes take it when traveling for jet-lag and it helps a bit.&lt;/span&gt;&lt;/li&gt;
	&lt;li class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;I also have a &lt;a href=&quot;http://www.amazon.com/Philips-goLITE-BLU-Therapy-Device/dp/B001I45XL8/&quot; target=&quot;_blank&quot;&gt;Phillips goLITE&lt;/a&gt; that I was using for a few months. It doesn't really seem to help except maybe on the margins in the darkest days of winter.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.flickr.com/photos/dickuhne/199054423/in/photolist-iAcWP-jn8Hjn-7HvdbW-o4nN8L-cXNgZU-7cyEQM-fVDUvo-Dgtvk-pYQdRY-8aq4B8-cVkvq7-kp9UX-fw47vw-f1LrTg-pNUyW8-bZ7Mpq-nEgVyd-me1fy5-b76AHP-pfZUat-cjAh2s-5HjMW-8raCHf-q69jjW-a4YHuh-oWAUUB-e62Mw3-acsdfN-p9shiv-dqCukQ-k62uiJ-9F5FKo-4Y3Jov-i9qpnK-6ffj9w-gmSJGZ-8VXxBw-4tFGaf-5BXU7j-9SLRbu-9vPCWX-o1DZMz-Ddu9-8yKgwx-iWZh1Q-awWS-6bHnK-q1Zc6d-d9XKG-57CE2r&quot; target=&quot;_blank&quot;&gt;Photo credit: punch drunk&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Business Model Canvas for Social Enterprises</title>
   <link href="/2015/02/business-model-canvas-for-social-enterprises"/>
   <updated>2015-02-06T14:01:44+00:00</updated>
   <id>/2015/02/business-model-canvas-for-social-enterprises</id>
   <content type="html">&lt;p&gt;Business model generation is &lt;em&gt;difficult&lt;/em&gt;. Despite the startup renaissance currently going on, the battlefields of the marketplace are littered with seemed-great-at-the-time business ideas that were  not so great once they launched. The Lean Startup idea embraces this, teaching entrepreneurs to iterate quickly to find “product-market fit” before they run out of cash and need to get a job or go back to the coffers of their investors. In the Lean Startup school of thought, business models are sketched out on a Business Model Canvas (BMC) that is one page and can be filled out in half an hour or less. The engineer in me loves this idea. It embraces the Keep It Simple, Stupid ethos that underlies the most elegant engineering solutions.&lt;/p&gt;

&lt;p&gt;The real world is not so simple, however. One wrinkle to the Lean Startup model I’ve been working on recently with a client is how to adapt it to a double bottom line business. A double-bottom line business is one where financial profit is not the sole goal of the owners. Talk about making an already difficult process more challenging! To solve this problem, I decided if we’re not going to Keep it Simple, let’s at least not make it too much more complex! I thought, how can I modify the traditional Lean Startup BMC to reflect a social enterprise with as little additional complexity as possible.&lt;/p&gt;

&lt;p&gt;In some of the literature on social entrepreneurship and impact investing, there is the concept of a concessionary investment. &lt;a href=&quot;http://www.ssireview.org/up_for_debate/article/impact_investing&quot; target=&quot;_blank&quot;&gt;A concessionary investment is, in effect, a grant&lt;/a&gt; because the investor is sacrificing a market-rate return in order to support some kind of social return on his investment. This could be providing a loan at a lower rate of interest, given the business’s credit risk, or it could be providing risk capital (equity) to a business that is far more financially risky that a traditional startup (which are risky enough!).&lt;/p&gt;

&lt;p&gt;I like this approach to thinking of impact investing because is puts just one more constraint on a traditional business model: the fact that the business is capitalized by an investor who wants a financial return in addition to some kind of social return. This keeps the engineer in my happy, because as any good engineer knows, if you put too many constraints on a problem you will get no solution! This is how I decided to reflect the added complexity of a double bottom line business in the BMC.&lt;/p&gt;

&lt;p&gt;I added two new boxes to the traditional BMC to capture this. The first is &lt;b&gt;social good&lt;/b&gt;, which is non-financial value you are creating for your customers or society at large. The second is &lt;b&gt;capitalization&lt;/b&gt;, which should describe how your impact investor (which could be yourself, if you are bootstrapping) will measure his social impact.&lt;/p&gt;

&lt;p&gt;This canvas worked well for us, so I wanted to share it in case anyone else is working on a similar problem. If you’ve applied Lean Startup methodologies to a social enterprise, or if this was helpful to you, please let me know in the comments.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2015/02/Business-Model-Sketch-Social-Enterprise-800-2512125ef.png&quot; srcset=&quot;/generated/wp/uploads/2015/02/Business-Model-Sketch-Social-Enterprise-400-2512125ef.png 400w, /generated/wp/uploads/2015/02/Business-Model-Sketch-Social-Enterprise-600-2512125ef.png 600w, /generated/wp/uploads/2015/02/Business-Model-Sketch-Social-Enterprise-800-2512125ef.png 800w, /generated/wp/uploads/2015/02/Business-Model-Sketch-Social-Enterprise-1000-2512125ef.png 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also access a &lt;a title=&quot;Google Drive Version&quot; href=&quot;https://docs.google.com/drawings/d/1J6QyXw0Cjz6WdwU7IIA1YtqooPyOH0_FlLY9Vn1_LVc/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;version on Google Drive&lt;/a&gt; or a &lt;a title=&quot;Google Drive Version (Blank)&quot; href=&quot;https://docs.google.com/drawings/d/1WG8nuo2RMbyxZ4ggdM0nChBXdZRbSnDgoO0KwpuxLdg/copy&quot; target=&quot;_blank&quot;&gt;blank version&lt;/a&gt; (note: make a copy of the blank version to edit yourself).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Simple Regex to Match Options Symbology Initiative Tickers</title>
   <link href="/2014/11/simple-regex-to-match-options-symbology-initiative-tickers"/>
   <updated>2014-11-18T16:40:04+00:00</updated>
   <id>/2014/11/simple-regex-to-match-options-symbology-initiative-tickers</id>
   <content type="html">&lt;p&gt;This is a simple regular expression to match Options Symbology Initiative (OSI) tickers. It has been tested in C#:&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ticker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AAPL  131101C00470000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OSITicker&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;(.{6})(\d{2})(0\d|1[0-2])(0[1-9]|[12]\d|3[01])(C|P)(\d{8})&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OSITicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ticker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;underlying&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expirationDate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isPut&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;P&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strikePrice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Using the Draft OAuth Assertion Grant with Google+</title>
   <link href="/2014/09/using-the-draft-oauth-assertion-grant-with-google"/>
   <updated>2014-09-10T18:38:35+00:00</updated>
   <id>/2014/09/using-the-draft-oauth-assertion-grant-with-google</id>
   <content type="html">&lt;p&gt;The IETF has been working on a &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-oauth-assertions-17&quot;&gt;new OAuth standard for “assertions”&lt;/a&gt; which enables OAuth to work with other types of authentication systems. This can be used to allow users to authenticate with your API through Google+ or other third-party identity providers.&lt;/p&gt;

&lt;p&gt;For example, let’s say you are developing a single-page Javascript app or a mobile app that uses both Google’s APIs as well as your own APIs. You’d like to have users authenticate with Google to obtain access to Google’s APIs, but then you’d also like your app to authenticate with your server to gain access to some additional resources. You’d like to not reinvent the wheel and use OAuth for your own API. You also implicitly trust Google to verify the user’s identity, so you don’t want the user to need to go through another OAuth flow just to use your API.&lt;/p&gt;

&lt;p&gt;Assertion grants allow you to do this in a standards-compliant way. This is a draft standard that was just submitted in July of 2014, but for this simple use-case, it is already fairly usable.&lt;/p&gt;
&lt;h2&gt;How Google+ handles sign in for &quot;combination&quot; apps (with both a client and a server)&lt;/h2&gt;
&lt;p&gt;Google has &lt;a href=&quot;https://developers.google.com/+/web/signin/server-side-flow#step_6_send_the_authorization_code_to_the_server&quot;&gt;some great documentation on how to authenticate both a client and a server&lt;/a&gt;, which is worth reading if you plan on implementing this. The gist of it is that first the client authenticates with Google through a OAuth popup or redirect. This gives the client both an access token and an access code. The code is then passed to the server to authenticate the backend.&lt;/p&gt;

&lt;p&gt;This “passing the code to the backend step” is what OAuth assertion grants enable in a standards-compliant way.&lt;/p&gt;
&lt;h2&gt;OAuth Assertion Grants&lt;/h2&gt;
&lt;p&gt;The IETF Assertion Grant spec defines a way to define new grant types that are assertions of identity from third parties. An assertion grant looks like this (from the &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-oauth-assertions-17#section-4.1&quot;&gt;example in the spec&lt;/a&gt;):&lt;/p&gt;
&lt;pre class=&quot;lang:js decode:true&quot;&gt;{
   &quot;grant_type&quot;: &quot;urn:ietf:params:oauth:grant-type:saml2-bearer&quot;,
   &quot;assertion&quot;: &quot;PHNhbWxwOl...[omitted for brevity]...ZT4&quot;,
   &quot;scope&quot;: &quot;&quot;
}&lt;/pre&gt;
&lt;p&gt;Assertions are very similar to &lt;a href=&quot;http://tools.ietf.org/html/rfc6749#section-4.3&quot;&gt;Resource Owner Password Credential grants&lt;/a&gt; in that they are passed as HTTP POSTs directly to the &lt;code&gt;/token&lt;/code&gt; endpoint. The “grant_type” for an assertion must be a absolute URI that defines the assertion type, the “assertion” is a Base64-encoded string (using URL-safe encoding) that contains the actual asserrtion, and the “scope” is the same as other OAuth grant types.&lt;/p&gt;
&lt;h2&gt;An OAuth Assertion Grant for Google+&lt;/h2&gt;
&lt;p&gt;Since Google has not defined an assertion grant format for Google+ identity, I’ve decided to make one up! You can feel free to steal this format for your own apps.&lt;/p&gt;
&lt;pre class=&quot;lang:js decode:true&quot;&gt;{
   &quot;grant_type&quot;: &quot;urn:googlepluscode&quot;,
   &quot;assertion&quot;: &quot;(see below)&quot;,
   &quot;scope&quot;: &quot;(specific to your app)&quot;
}&lt;/pre&gt;
&lt;p&gt;For my Google+ assertion grant, I’ve just chose “urn:googlepluscode” as the URL. This is arbitrary, but Google would need to standardize this so we currently don’t have a better option. For the assertion itself, I use a Base64-encoded, url-safe version of this JSON:&lt;/p&gt;
&lt;pre lanng:js=&quot;&quot; decode:true=&quot;&quot;&gt;{
   &quot;code&quot;: &quot;(access code provided by the front-end when it authenticates with Google)&quot;,
   &quot;google_plus_user_id&quot;: &quot;(Google+ user ID)&quot;
}&lt;/pre&gt;
&lt;h2&gt;Verifying the Google+ assertion grant&lt;/h2&gt;
&lt;p&gt;When the backend receives the Google+ assertion grant, it should do these steps to verify it:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Convert the access code into an access token&lt;/li&gt;
	&lt;li&gt;Call the &lt;code&gt;/oauth/tokeninfo&lt;/code&gt; endpoint with the access token from the previous step&lt;/li&gt;
	&lt;li&gt;In the response from the &lt;code&gt;tokeninfo&lt;/code&gt; endpoint, confirm these things:
&lt;ol&gt;
	&lt;li&gt;The &lt;code&gt;user_id&lt;/code&gt; matches the &lt;code&gt;google_plus_user_id&lt;/code&gt; in the assertion&lt;/li&gt;
	&lt;li&gt;The &lt;code&gt;issued_to&lt;/code&gt; from the &lt;code&gt;tokeninfo&lt;/code&gt; response matches the &lt;code&gt;client_id&lt;/code&gt; of your application (both the front-end and back-end share the same &lt;code&gt;client_id&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Stay tuned for a future post on how to implement this with Rails and &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper&quot;&gt;Doorkeeper&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How secure is the OAuth2 "Resource Owner Password Credential" flow for single-page apps?</title>
   <link href="/2014/09/how-secure-is-the-oauth2-resource-owner-password-credential-flow-for-single-page-apps"/>
   <updated>2014-09-08T19:07:47+00:00</updated>
   <id>/2014/09/how-secure-is-the-oauth2-resource-owner-password-credential-flow-for-single-page-apps</id>
   <content type="html">&lt;p&gt;I’ve been working on a single-page, browser-based app and I was investigating using the OAuth2 “Resource Owner Password Credential” (ROPC) flow to log users in without needing a normal OAuth popup or redirect. The single-page app is written by the same developers as the backend API, so it is more trusted than a third-party application (which should &lt;em&gt;never&lt;/em&gt; touch a user’s password). However, since it is a client-side application in Javascript, it was unclear to me how to take steps to make this as secure as possible, so I did some research. In this post, I’ll describe what I found.&lt;/p&gt;
&lt;h2&gt;What the OAuth spec says&lt;/h2&gt;
&lt;p&gt;The OAuth spec is a dense monster, but is worth digging into since so many sites are using OAuth today. The &lt;a href=&quot;http://tools.ietf.org/html/rfc6749#section-4.3&quot; target=&quot;_blank&quot;&gt;relevant section of the spec&lt;/a&gt; says that the ROPC flow can be used when the resource owner (the user) “has a trust relationship with the client, such as the device operating system or a highly privileged application”, which would apply to an application developed by the same developers as the API server. The spec also says that it should only be used when other flows are “not viable”. This isn’t strictly the case for single-page Javascript applications, which can use the &lt;a href=&quot;http://tools.ietf.org/html/rfc6749#section-1.3.2&quot; target=&quot;_blank&quot;&gt;Implicit Grant&lt;/a&gt; flow or the &lt;a href=&quot;http://tools.ietf.org/html/rfc6749#section-1.3.1&quot; target=&quot;_blank&quot;&gt;Authorization Code&lt;/a&gt; flow. However, for clients “owned” by the same owner as the authorization server, the OAuth popup or redirect can be a poor user experience and may confuse users since they wouldn’t expect to “authorize” an app that they perceive as one and the same as the service itself. So, assuming you trust the client and are willing to consider “bad user experience” as “not viable”, you could use the ROPC flow for a front-end client.&lt;/p&gt;

&lt;p&gt;The other issue is that Javascript clients cannot disguise their client credentials because the user may just “view source” to retrieve the credentials. This makes &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-10.2&quot; target=&quot;_blank&quot;&gt;client impersonation&lt;/a&gt; possible. It also means the the client is a “public” client for the purposes of the OAuth spec, and client authentication is not possible. The OAuth spec states that when client authentication is not possible, the authorization server SHOULD employ other means to validate the client’s identity.&lt;/p&gt;
&lt;h2&gt;How can we &quot;validate the client's identity&quot; as best as possible with Javascript clients?&lt;/h2&gt;
&lt;p&gt;First, we need to accept that because that this is a public client under control of the user, we’ll have to accept that it is impossible to completely prevent client impersonation. You always could impersonate a client with cURL or a web scraper, which is something that is out of the control of the API owner. To prevent this, we’d need some kind of trusted computing architecture where we are 100% certain that the client credentials are protected from prying eyes.&lt;/p&gt;

&lt;p&gt;Since we can’t completely prevent client impersonation, we need to define what types of impersonation we are trying to prevent. For Javascript clients, I want to prevent two types of impersonation:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Impersonation by another Javascript client running in a standards-compliant browser on a domain other the official client's domain&lt;/li&gt;
	&lt;li&gt;Compromised client Javascript or HTML&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Both types of impersonation are already well-known and have solutions in other Internet standards that we can use for this case.&lt;/p&gt;
&lt;h3&gt;Preventing compromised client source code&lt;/h3&gt;
&lt;p&gt;For this one, we can simply use SSL for the client’s domain. If the source code has been compromised through a man-in-the-middle attack, the user will see an SSL error in the browser. The OAuth spec already requires that communication to the authorization server’s token and authorization endpoints occur over SSL. It is permitted in the OAuth spec to have a client delivered over HTTP, however.&lt;/p&gt;

&lt;p&gt;In order to use the ROPC grant type for Javascript clients, we need to be more strict than the spec and absolutely ensure that the client is delivered over SSL. If the Javascript client is not delivered over SSL, a middleman could tamper with the client’s Javascript to intercept either the resource owner’s credentials or the access token. This makes it impossible for the resource owner to trust the client, which breaks the first chain of trust between the resource owner and the authorization server.&lt;/p&gt;
&lt;h3&gt;Preventing impersonation by other Javascript clients&lt;/h3&gt;
&lt;p&gt;The other kind of impersonation we’d like to prevent is another Javascript client (on some other domain) using the official client’s credentials to retrieve access tokens. To do this, we can use the browser’s cross-origin security model.&lt;/p&gt;
&lt;h4&gt;If your client is on the same origin as your authentication server&lt;/h4&gt;
&lt;p&gt;If you are running a client on the same origin as the authentication server, requests to the authentication server will be permitted through “normal” AJAX and I believe that all you will need to do is &lt;em&gt;not&lt;/em&gt; permit cross-domain requests (i.e. don’t enable CORS) on your authentication server and the ROPC flow will be unavailable to impersonating clients. Here’s why:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;It is possible to submit a form from another domain to kick off the ROPC flow (a POST to your token endpoint), however, it is not possible for Javascript running on that other domain to access the response. This means that the impersonating Javascript may cause your API server to return an access token via a form submission, but it wouldn't be possible for it to read that token. Since we are not using cookie-based authentication, the client needs to parse the token response for it to become authorized.&lt;/li&gt;
	&lt;li&gt;It is not possible for a third-party (an intermediate proxy) to intercept the token in this way because the browser will be communicating with your server over SSL (you are using SSL for your authentication server, right!?).&lt;/li&gt;
	&lt;li&gt;You need to ensure that potentially-impersonated POSTs to your token endpoint are not in any way destructive. Typically, CSRF attacks (of which this technically is one) lead to a compromise by either setting a cookie that is later used to access a protected resource or cause a POST that takes an abusive action (withdrawing money). You'll need to ensure that a POST to your token endpoint doesn't do either of these things.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;If your client is on a different origin from your authentication server&lt;/h4&gt;
&lt;p&gt;If you are running your client on “yourdomain.com” and your API server on “api.yourdomain.com”, you will need to implement CORS anyway. In this case, you should leverage CORS to validate the client. Here’s how you can do it:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;For every ROPC-enabled client, record in your API server's database the acceptable Javascript origins for that client.&lt;/li&gt;
	&lt;li&gt;When an incoming ROPC grant type comes in, require your client to provide a client ID. Look up that client ID in your database and confirm that the CORS &quot;Origin&quot; header matches the expected origin. Browsers do not permit Javascript clients to forge the &quot;Origin&quot; header, making this robust against Javascript client spoofing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Additional considerations&lt;/h3&gt;
&lt;p&gt;Since IE9 and below don’t implement CORS correctly, many sites implement work-arounds such as iframe proxies or Flash-based work-arounds. I haven’t looked into the implications of using these, but they definitely need careful consideration to make sure they are not exploitable.&lt;/p&gt;

&lt;p&gt;You absolutely should implement some kind of rate-limiting on your token endpoint to prevent brute-force attacks.&lt;/p&gt;

&lt;p&gt;Finally, you should never issue public clients a refresh token (or any long-lived access token). The reason for this is that, depending on your backend architecture, these could be difficult to revoke should you need to revoke access to a specific client. For example, if you are using a &lt;a href=&quot;http://jwt.io&quot;&gt;JSON Web Token&lt;/a&gt; instead of a database record, you would need to blacklist all of them it to revoke them.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TsTables, a long overdue replacement for TSDB!</title>
   <link href="/2014/06/tstables-a-long-overdue-replacement-for-tsdb"/>
   <updated>2014-06-30T16:58:47+00:00</updated>
   <id>/2014/06/tstables-a-long-overdue-replacement-for-tsdb</id>
   <content type="html">&lt;p&gt;I just posted my replacement for my old time series database, &lt;a title=&quot;TsTables – Store High Frequency Data with PyTables&quot; href=&quot;http://andyfiedler.com/projects/tstables-store-high-frequency-data-with-pytables/&quot;&gt;check it out on the project page&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Installing WxPython and RunSnakeRun on Mac OSX 10.9</title>
   <link href="/2014/05/installing-wxpython-and-runsnakerun-on-mac-osx-10-9"/>
   <updated>2014-05-28T13:37:42+00:00</updated>
   <id>/2014/05/installing-wxpython-and-runsnakerun-on-mac-osx-10-9</id>
   <content type="html">&lt;p&gt;I just &lt;a title=&quot;The barebones profiling method that is surprisingly effective&quot; href=&quot;http://andyfiedler.com/blog/the-barebones-profiling-method-that-is-surprisingly-effective-272/&quot;&gt;posted about my Ctrl-C strategy for profiling&lt;/a&gt; and now I’m going to completely flip-flop and explain how I installed RunSnakeRun, a way to visualize the output of Python’s cProfile. The Ctrl-C way of profiling worked really well for optimizing append performance of my &lt;a title=&quot;TsTables Github&quot; href=&quot;http://github.com/afiedler/tstables&quot; target=&quot;_blank&quot;&gt;time series storage library&lt;/a&gt;, but doesn’t work so great for profiling things that are already very fast (on the order of milliseconds) and need to be faster.&lt;/p&gt;

&lt;p&gt;For that, RunSnakeRun worked really well. RunSnakeRun gives you a nice rectangle chart showing in which functions your program spends most of its time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2014/05/Screen-Shot-2014-05-28-at-9.27.01-AM-800x499-800-aa93d5bb2.png&quot; srcset=&quot;/generated/wp/uploads/2014/05/Screen-Shot-2014-05-28-at-9.27.01-AM-800x499-400-aa93d5bb2.png 400w, /generated/wp/uploads/2014/05/Screen-Shot-2014-05-28-at-9.27.01-AM-800x499-600-aa93d5bb2.png 600w, /generated/wp/uploads/2014/05/Screen-Shot-2014-05-28-at-9.27.01-AM-800x499-800-aa93d5bb2.png 800w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To install RunSnakeRun on Mac OSX, you’ll need Homebrew and PIP. You can install it like this:&lt;/p&gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true crayon-selected&quot; title=&quot;Bash commands to install RunSnakeRun&quot;&gt;$ brew install wxpython --python --devel
$ pip install SquareMap RunSnakeRun&lt;/pre&gt;
&lt;p&gt;Next, you’ll need to export a pstats database with your profiler information. Use cProfile to do this. For TsTables, you can run the benchmark with profiling information like this:&lt;/p&gt;
&lt;pre class=&quot;lang:python decode:true &quot; title=&quot;How to run the TsTables benchmark with profiling information&quot;&gt;import cProfile
import tstables

cProfile.run('tstables.Benchmark.main()','tstables.profile')&lt;/pre&gt;
&lt;p&gt;This will create a tstables.profile file in the current directory, which you can open with RunSnakeRun. Start RunSnakeRun by running &lt;span class=&quot;lang:default highlight:0 decode:true  crayon-inline &quot;&gt;runsnake&lt;/span&gt;  (assuming that PIP’s bin folder is in your path).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The barebones profiling method that is surprisingly effective</title>
   <link href="/2014/05/the-barebones-profiling-method-that-is-surprisingly-effective"/>
   <updated>2014-05-27T12:01:06+00:00</updated>
   <id>/2014/05/the-barebones-profiling-method-that-is-surprisingly-effective</id>
   <content type="html">&lt;p&gt;I’m working on profiling my time series database (&lt;a title=&quot;TsTables&quot; href=&quot;http://github.com/afiedler/tstables&quot; target=&quot;_blank&quot;&gt;TsTables&lt;/a&gt;) because append performance is not what I want it to be. I know that the issue is a few loops that are written in Python instead of using NumPy’s optimized vector operations. I’m not exactly sure which loop is the slowest.&lt;/p&gt;

&lt;p&gt;I started trying to get cProfile to work, but ended up with way too much data to be useful. So I reverted to my old school, barebones profiling method: Ctrl-C.&lt;/p&gt;

&lt;p&gt;How do you use this method you might ask? Start your program and randomly hit Ctrl-C. Wherever your program stops most frequently is the probably the slowest part. Speed that up and repeat!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Two Podcasts I've been Enjoying Recently</title>
   <link href="/2014/05/two-podcasts-ive-been-enjoying-recently"/>
   <updated>2014-05-21T20:57:02+00:00</updated>
   <id>/2014/05/two-podcasts-ive-been-enjoying-recently</id>
   <content type="html">&lt;p&gt;Since I’ve moved offices to &lt;a href=&quot;http://www.wework.com/location/chinatown/&quot; target=&quot;_blank&quot;&gt;WeWork Chinatown&lt;/a&gt;, I have about a 20 minute commute on Metro. The nice thing about commutes is that you have some downtime, which recently I’ve been using to listen to podcasts.  If you’re looking for podcast recommendations, two good ones are Monocle’s &lt;em&gt;The Entrepreneurs&lt;/em&gt; and the &lt;em&gt;Tim Ferriss Show&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a title=&quot;Monocle - The Entrepreneurs&quot; href=&quot;http://monocle.com/radio/shows/the-entrepreneurs/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;The Entrepreneurs&lt;/em&gt;&lt;/a&gt; kind of makes you feel like you are listening to BBC’s World Service or NPR, but the content is focused on business and entrepreneurship. It has a refreshing international and non-technology bent, which is great for getting out of the U.S. technology world and realizing that every new business doesn’t need to be a website started in San Francisco!&lt;/p&gt;

&lt;p&gt;The &lt;a title=&quot;Tim Ferriss Show&quot; href=&quot;http://www.stitcher.com/podcast/tim-ferriss-show/the-tim-ferriss-show&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Tim Ferriss Show&lt;/em&gt;&lt;/a&gt; is by the author of the &lt;em&gt;Four Hour Body &lt;/em&gt;and &lt;em&gt;Four Hour&lt;/em&gt; &lt;em&gt;Workweek&lt;/em&gt;, both NY Times bestsellers. The format is much longer than &lt;em&gt;The Entrepreneurs,&lt;/em&gt; and is more of a conversation than a highly-produced magazine-style show. There are only a few episodes of this one, but so far the guests have been very interesting and Tim does a good job interviewing them in depth.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Ultimate Guide to Dealing with High Frequency Data</title>
   <link href="/2014/05/the-ultimate-guide-to-dealing-with-high-frequency-data"/>
   <updated>2014-05-07T13:10:24+00:00</updated>
   <id>/2014/05/the-ultimate-guide-to-dealing-with-high-frequency-data</id>
   <content type="html">&lt;p&gt;I have no idea if this is actually the ultimate guide to high frequency data, but hopefully it is at least a useful guide!&lt;/p&gt;

&lt;p&gt;I’m currently working on a project to replace the &lt;a title=&quot;Time Series Database&quot; href=&quot;http://andyfiedler.com/projects/time-series-database/&quot;&gt;Time Series Database&lt;/a&gt; (TSDB) that I wrote a few years ago. By re-writing it, I’m learning a lot about what works and what doesn’t when dealing with high frequency data. High frequency in this case means billions of records, with timestamp precision down to the millisecond. This data is being used for economic research and analytics, not live trading. It is a pain to deal with because it is simply too large to fit in memory or process with a standard relational database. These are some rules that I’ve developed while working on this project.&lt;/p&gt;
&lt;h2&gt;Partition your data!&lt;/h2&gt;
&lt;p&gt;The biggest issue with this much time series data is that you simply cannot index the timestamp column with any normal indexing scheme. In DB-speak, the timestamp column will be a &lt;a title=&quot;Cardinality (Wikipedia)&quot; href=&quot;http://en.wikipedia.org/wiki/Cardinality_(SQL_statements)&quot; target=&quot;_blank&quot;&gt;“high cardinality”&lt;/a&gt; column, which means it does not lend itself well to indexing. This is a problem because most queries on this kind of high frequency data are to fetch a subset by timestamp, and you do NOT want to make a table scan of a billion plus records to find a few minutes of data.&lt;/p&gt;

&lt;p&gt;TSDB attempts to fix this problem by keeping rows in order and creating a &lt;a title=&quot;Dense versus Sparse Indexes&quot; href=&quot;http://www.cs.sfu.ca/CourseCentral/354/zaiane/material/notes/Chapter11/node5.html&quot; target=&quot;_blank&quot;&gt;sparse index&lt;/a&gt; (an index on every 20,000 rows). This should work in theory, but you must ensure that your rows are always sequential. That makes inserting or updating difficult, because you potentially need to shift rows to maintain the order. Also, I’m not aware of a relational database that lets you create a sparse index, which rules out the most common and best understood data stores.&lt;/p&gt;

&lt;p&gt;Another approach is to &lt;em&gt;partition&lt;/em&gt; your data. This is my current approach. The way this works is you simply create multiple tables for set time periods (one table per day or month is a good starting point). You then put records that match those time periods in their respective tables and write some logic to union queries across tables.&lt;/p&gt;

&lt;p&gt;Partitioning enables the database to hunt through a subset of rows to find the ones that match your query. Both Postgres and MySQL support partitioning, making them viable options for storing time series data. The library that I’m working on will use &lt;a title=&quot;PyTables&quot; href=&quot;http://pytables.github.io&quot; target=&quot;_blank&quot;&gt;PyTables&lt;/a&gt; to partition time series data by date.&lt;/p&gt;
&lt;h2&gt;Store timestamps in UTC&lt;/h2&gt;
&lt;p&gt;Most of the time, your source data will have timestamps in UTC. If it doesn’t, I suggest you convert to UTC before storing. Most libraries use either UTC or local time internally, and because you can never be sure what time zone your users will be in, using UTC is the least common denominator.&lt;/p&gt;

&lt;p&gt;UTC also has the nice property of not having daylight saving time changes. DST causes all sorts of pain when working with 24/7 data. Avoid it by just dealing in UTC internally, and then converting to other timezones for querying or display.&lt;/p&gt;
&lt;h2&gt;Store timestamps as integers, even if your programming language uses floats&lt;/h2&gt;
&lt;p&gt;MATLAB, Excel, and R all store timestamps internally as floats by default. This gives their timestamp types a large range and high precision, but I don’t think it is appropriate for archiving time series data. Why? Floats are imprecise. You do not know with any accuracy the number of significant digits when using a float, and you cannot make comparisons without worrying about round off errors. Admittedly, even with microsecond data, these systems that use a 64-bit double and 1970-01-01 as the epoch will not loose precision until &lt;span style=&quot;color: #000000;&quot;&gt;2242-03-16, but why worry about it? I recommend a 64-bit integer as the timestamp column. With one tick equaling one millisecond, you have a time range of &lt;span style=&quot;color: #252525;&quot;&gt;±&lt;/span&gt;&lt;span style=&quot;color: #252525;&quot;&gt;292 million years. This is Java’s internal representation. With one tick equaling 100 nanoseconds (0.1 microsecond), you have a time range of ±29,227 years, which is what Win32 does. Should be plenty!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Have a solid ETL procedure&lt;/h2&gt;
&lt;p&gt;ETL means “extract, transform, load” and is the term for taking data out of one format or system and loading it into another. The step to make sure is solid when you are dealing with high frequency data is the “load” step. Try to make a process where you can revert a botched load automatically. If you don’t do this, guaranteed someone or something will screw up an import, and you will be left wading through millions of rows of data to fix it or re-importing everything from your source system.&lt;/p&gt;

&lt;p&gt;The most basic way to make the load step revertible is to just make a copy of your time series before writing anything to it. You could devise a more sophisticated process, like using rsync to make diffs of your time series, but be nice to your future self and make backups at the very least!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Business Model Sketch</title>
   <link href="/2014/04/the-business-model-sketch"/>
   <updated>2014-04-22T13:25:19+00:00</updated>
   <id>/2014/04/the-business-model-sketch</id>
   <content type="html">&lt;p&gt;I was helping a friend work through some business ideas, and realized that like writing an outline helps you structure a essay, doing a “business model sketch” can help you break apart a business idea and evaluate its viability. Just like an essay needs a thesis, a body and a conclusion or it can fall flat, a business model needs specific components or it is not viable. I identified six components that roughly draw from &lt;a title=&quot;The Personal MBA by Joshua Kaufman at Amazon&quot; href=&quot;http://www.amazon.com/The-Personal-MBA-Master-Business/dp/1591845572&quot; target=&quot;_blank&quot;&gt;The Personal MBA&lt;/a&gt; and the “lean startup” philosophy. If you are thinking of starting a new business, consider taking one page of paper, drawing six boxes, and filling out these six areas: customer, value proposition, marketing, sales, value delivery, and finance.&lt;/p&gt;

&lt;p&gt;The problem with many business ideas is that, while they sometimes hit on a few of these areas, they are weak in others. That can be okay, but as a startup, your goal should be to develop a plan about how to address your idea’s weak points, and quickly test whether that plan is viable. If it is, great! If not, reconsider or proceed with caution!&lt;/p&gt;
&lt;h2&gt;The template&lt;/h2&gt;
&lt;h3&gt;The customer&lt;/h3&gt;
&lt;p&gt;The specific person to whom value is being provided &lt;strong&gt;and is making a purchasing decision&lt;/strong&gt;. Many times a business’s value proposition will include many people. For example, if you are selling family vacations, your business is offering value to the father (maybe you bundle in a few rounds of golf), mother (there’s a reason cruises have spas), and kids (I don’t think Disney pays actors to dress as Micky Mouse for dad). This is important to understand, especially when you get to the value delivery portion of the business model sketch. However, first identify the decision maker!&lt;/p&gt;
&lt;h3&gt;Value proposition&lt;/h3&gt;
&lt;p&gt;The value proposition is a description of the value you are providing your customer. Remember that your customer is the person making the purchasing decision, so when crafting your value proposition, you need to understand the wants and needs of that particular person above any secondary party.&lt;/p&gt;

&lt;p&gt;Ideally, focus your value proposition on addressing core human drives. The Personal MBA identifies &lt;a href=&quot;http://book.personalmba.com/core-human-drives/&quot; target=&quot;_blank&quot;&gt;five core human drives&lt;/a&gt;: the drives to acquire, bond, learn, defend, and feel. Many consumer products clearly target their value propositions to these core human drives. This can be difficult if you are not selling consumer products or services, but if you look closely, many business-to-business or business-to-government sales are targeted the same way. Living in Washington, DC I notice this every time I go through the Pentagon metro station. Large defense contractors clearly target their buyer’s core human drive to defend with advertisements that depict the strength and sophistication of their offerings. This example of &lt;a href=&quot;http://www.huffingtonpost.com/2013/09/06/drone-ads-dc-metro_n_3880026.html&quot; target=&quot;_blank&quot;&gt;advertisements for Northrop Grumman’s unmanned drones&lt;/a&gt; is a great example.&lt;/p&gt;
&lt;h3&gt;Marketing&lt;/h3&gt;
&lt;p&gt;Marketing is fundamentally your strategy for getting your customer’s attention to deliver your value proposition. When you create a business model sketch, you need to attempt to identify how you will reach enough customers at an economical cost. If you have an excellent value proposition but your customers do not know about it, your business model will fail.&lt;/p&gt;

&lt;p&gt;In the marketing portion of your sketch, you should also attempt to identify in rough terms the market size and dynamics: how many potential customers do you have and is that number increasing and/or gaining purchasing power?&lt;/p&gt;
&lt;h3&gt;Sales&lt;/h3&gt;
&lt;p&gt;If marketing is your strategy for reaching your target customer, sales is your strategy for negotiating a contract to deliver your value proposition in exchange for money. For an online business, this could be as simple as “sign up for PayPal and put a Buy Now button on my website”. If you are an enterprise software, this could be extensive contract negotiations.&lt;/p&gt;

&lt;p&gt;Sales and marketing are closely intertwined, but separating them out to different boxes in the business model sketch should help you to separate the &lt;em&gt;act of reaching your customer and delivering your value proposition&lt;/em&gt; (marketing) and &lt;em&gt;the mechanics of “closing the deal”&lt;/em&gt; (sales).&lt;/p&gt;
&lt;h3&gt;Value delivery&lt;/h3&gt;
&lt;p&gt;This is what many people think of as the meat of your business model, but the previous sections are also key to determining its viability. Value delivery is the processes that delivery the promised value to your customers. In the family vacation example, this is the operations of your hotel from hiring staff to procuring food and drinks for the restaurant. If you are an online business, this is the cost of developing your website as well as operational cost of running your servers and supporting your customers.&lt;/p&gt;
&lt;h3&gt;Finance&lt;/h3&gt;
&lt;p&gt;The finance section should answer “what financial resources do I need to support this business model, and what is the return on investment?”. This is hard to answer in specifics in a business model sketch, and should be tackled in more detail in a complete business plan. However, once you complete the other sections, you should be able to answer these questions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Is this a financial capital-intensive business to set up? To run? If yes, what is the risk to capital committed to the business? What return can I offer owners of capital given that risk? How can I source that capital, loans or equity investment?&lt;/li&gt;
	&lt;li&gt;Is this a human capital-intensive business to set up? If yes, what is my recruitment strategy? Can I attract the right talent? Would I compensate them with equity or a salary?&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Writing Zero-Downtime Migrations for Rails and Postgres</title>
   <link href="/2014/04/writing-zero-downtime-migrations-for-rails-and-postgres"/>
   <updated>2014-04-18T13:38:26+00:00</updated>
   <id>/2014/04/writing-zero-downtime-migrations-for-rails-and-postgres</id>
   <content type="html">&lt;p&gt;Let’s suppose you are building an app. It is under heavy development and the dev team is cranking out new features left and right. Developers need to continually change the database schema, but you don’t want to take down the app for database migrations if at all possible. How the heck do you do this with Rails?&lt;/p&gt;

&lt;p&gt;We had this problem recently, and have come up with a procedure that solves it for most small database migrations. The goals of this procedure are to:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Avoid downtime by running database migrations while the app is live&lt;/li&gt;
	&lt;li&gt;Avoid too many separate deployments to production&lt;/li&gt;
	&lt;li&gt;Keep the application code as clean as possible&lt;/li&gt;
	&lt;li&gt;Balance the cost of additional coding with the benefit of having a zero-downtime migration. If the cost or complexity of coding a migration in this way is too great, then a maintenance window is scheduled and the migration is written in a non-zero downtime fashion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first thing to understand when writing a zero downtime migration is what types of Postgres data definition language (DDL) queries can be run without locking tables. As of Postgres 9.3, the following DDL queries can be run without locking a table:&lt;/p&gt;
&lt;pre class=&quot;toolbar:2 nums:false nums-toggle:false lang:pgsql decode:true&quot;&gt;CREATE INDEX CONCURRENTLY&lt;/pre&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;Postgres can create indexes concurrently (without table locks) in most cases. &lt;code&gt;CREATE INDEX CONCURRENTLY&lt;/code&gt; can take significantly longer than &lt;code&gt;CREATE INDEX&lt;/code&gt;, but it will allow both reads and writes while the index is being generated.&lt;/p&gt;

&lt;pre class=&quot;toolbar:2 nums:false nums-toggle:false lang:pgsql decode:true&quot;&gt;ALTER TABLE ... ADD COLUMN -- certain cases only!&lt;/pre&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;You can add a column to a table without a table lock if the column being added is nullable and has no default value or other constraints.&lt;/p&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;If you want to add a column with a constraint or a column with a default value, one option may be to add the column first without a default value and no constraint, then in a separate transaction set the default value (using &lt;code&gt;UPDATE&lt;/code&gt;)  or use &lt;code&gt;CREATE INDEX CONCURRENTLY&lt;/code&gt; to add a index that will be used for the constraint. Finally, a third transaction can add the constraint or default to the table. If the third transaction is adding a constraint that uses an existing index, no table scan is required.&lt;/p&gt;

&lt;pre class=&quot;toolbar:2 nums:false nums-toggle:false lang:pgsql decode:true&quot;&gt;ALTER TABLE ... DROP COLUMN&lt;/pre&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;Dropping a column only results in a metadata change, so it is non-blocking. When the table is &lt;code&gt;VACUUMED&lt;/code&gt;, the data is actually removed.&lt;/p&gt;

&lt;pre class=&quot;toolbar:2 nums:false nums-toggle:false lang:pgsql decode:true&quot;&gt;CREATE TABLE, CREATE FUNCTION&lt;/pre&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;Creating a table or a function is obviously safe because no one will have a lock on these objects before they are created.&lt;/p&gt;

&lt;h2&gt;Process for Coding the Migration&lt;/h2&gt;
&lt;p&gt;The guidelines I have been using for writing a zero-downtime migration are to:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Step 1: &lt;/strong&gt;Write the database migration in Rails.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Step 2: &lt;/strong&gt;Modify the application code in such a way that it will work both before and after the migration has been applied (more details on this below). This will probably entail writing code that branches depending on that database state.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Step 3: &lt;/strong&gt;Run your test suite with the modified code in step 2&lt;i&gt; but before you apply the database migration!&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Step 4: &lt;/strong&gt;Run your test suite with the modified code in step 2 &lt;em&gt;after applying the database migration&lt;/em&gt;. Tests should pass in both cases.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Step 5: &lt;/strong&gt;Create a pull request on Github (or the equivalent in whatever tool you are using). Tag this in such a way that whoever is reviewing your code knows that there is a database migration that needs careful review.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Step 6: &lt;/strong&gt;Create a separate pull request on Github that cleans up the branching code you wrote in step 2. The code you write in this step can assume that the DB is migrated.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the migration is deployed, you’ll deploy first the code reviewed in step 5. This code will be running against the non-migrated database, but that is a-ok because you have tested that case in step 3. Next, you will run the migration “live”. Once the migration is applied, you will still be running the code reviewed in step 5, but against the migrated database. Again, this is fine because you have tested that in step 4.&lt;strong&gt;
&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finally, once the production database has been migrated, you should merge your pull request from step 6. This eliminates the dead code supporting the unmigrated version of the database. You should write the code for step 6 at the same time you write the rest of this code. Then just leave the pull request open until you are ready to merge. The advantage of this is that you will be “cleaning up” the extraneous code while it is still fresh in your mind.&lt;/p&gt;
&lt;h2&gt;Branching Application Code to Support Multiple DB States&lt;/h2&gt;
&lt;p&gt;The key to making this strategy work is that you’ll need to write you application code in step 2 in a way that supports two database states: the pre-migrated state and the post-migrated state. The way to do this is to check the database state in the models and branch accordingly.&lt;/p&gt;

&lt;p&gt;Suppose you are dropping a column called “deleted”. Prior to dropping the column, you have a default scope that excludes deleted rows. After dropping the column, you want the default scope to include all rows.&lt;/p&gt;

&lt;p&gt;You would code a migration to do that like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DropDeletedFromPosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;up&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;drop_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deleted&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;down&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;add_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deleted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, in your Post model, you’d add branching like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;

   &lt;span class=&quot;c1&quot;&gt;# TODO: Remove this code after the DropDeletedFromPosts migration has&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;# been applied.&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attribute_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'deleted'&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;default_scope&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;deleted: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

   &lt;span class=&quot;c1&quot;&gt;# Other model code here ...&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt; But doesn't this get complicated for larger migrations?&lt;/h3&gt;
&lt;p&gt;Yes, absolutely it does. What we do when branching like this and it gets too complicated, we either sequence the DB changes over multiple deployments (and multiple sprints in the Agile sense) or “give up” and schedule a maintenance window (downtime) to do the change.&lt;/p&gt;

&lt;p&gt;Writing zero-downtime migrations is not easy, and you’ll need to do a cost-benefit analysis between scheduling downtime and writing lots of hairy branching code to support a zero-downtime deploy. That decision will depend on how downtime impacts your customers and your development schedule.&lt;/p&gt;

&lt;p&gt;Hopefully, if you decide to go the zero-downtime route, this procedure will make your life easier!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Querying Inside Postgres JSON Arrays</title>
   <link href="/2014/03/querying-inside-postgres-json-arrays"/>
   <updated>2014-03-14T16:17:58+00:00</updated>
   <id>/2014/03/querying-inside-postgres-json-arrays</id>
   <content type="html">&lt;p&gt;Postgres JSON support is pretty amazing. I’ve been using it extensively for storing semi-structured data for a project and it has been great for that use case. In Postgres 9.3, the maintainers added the ability to perform some simple queries on JSON structures and a few functions to convert from JSON to Postgres arrays and result sets.&lt;/p&gt;

&lt;p&gt;One feature that I couldn’t figure out how to implement using the built-in Postgres functions was the ability to query within a JSON array. This is fairly critical for lots of the reporting queries that I’ve been building over the part few days. Suppose you have some JSON like this, stored in two rows in a table called “orders”, in the column “json_field”:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Row 1, &quot;json_field&quot; column -----&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;products&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Fish Tank&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bird Feeder&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Row 2, &quot;json_field&quot; column -----&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;products&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bird Feeder&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Cat Pole&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to run a query like “find all distinct IDs in the json_field’s products array”, you can’t do that with the built in JSON functions that Postgres currently supplies (as far as I’m aware!). This is a fairly common use case, especially for reporting.&lt;/p&gt;

&lt;p&gt;To get this work, I wrote this simple PgPL/SQL function to map a JSON array.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-pgpsql&quot;&gt;CREATE OR REPLACE FUNCTION json_array_map(json_arr json, path TEXT[]) RETURNS json[]
LANGUAGE plpgsql IMMUTABLE AS $$
DECLARE
	rec json;
	len int;
	ret json[];
BEGIN
	-- If json_arr is not an array, return an empty array as the result
	BEGIN
		len := json_array_length(json_arr);
	EXCEPTION
		WHEN OTHERS THEN
			RETURN ret;
	END;

	-- Apply mapping in a loop
	FOR rec IN SELECT json_array_elements#&amp;gt;path FROM json_array_elements(json_arr)
	LOOP
		ret := array_append(ret,rec);
	END LOOP;
	RETURN ret;
END $$;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What this function does is given a JSON array as “json_arr” and a JSON path as “path”, it will loop through all elements of the JSON array, locate the element at the path, and store it in a Postgres native array of JSON elements. You can then use other Postgres array functions to aggregate it.&lt;/p&gt;

&lt;p&gt;For the query above where we want to find distinct product IDs in the orders table, we could write something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-pgpsql&quot;&gt;SELECT DISTINCT unnest(json_array_map(orders.json_field#&amp;gt;'{products}', '{id}'::text[]))::text AS &quot;id&quot; FROM orders;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That would give you the result:&lt;/p&gt;
&lt;pre&gt; id
-----
 2
 3
 1&lt;/pre&gt;
&lt;p&gt;Pretty cool!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Volatility of Bitcoin Index</title>
   <link href="/2014/02/volatility-of-bitcoin-index"/>
   <updated>2014-02-24T20:31:32+00:00</updated>
   <id>/2014/02/volatility-of-bitcoin-index</id>
   <content type="html">&lt;p&gt;A while back when I was a research assistant at the Federal Reserve, I worked on a project to make exchange rate volatility indexes for the major world currencies. We basically had some high frequency data for USD/EUR, USD/CHF, and USD/JPY and wanted to see how the financial crisis affected volatility. With all of the hype and turmoil around Bitcoin, I though it would be interesting to make a similar index for the Bitcoin/USD exchange rate.&lt;/p&gt;

&lt;p&gt;Before Bitcoin is ever able to become a viable “currency”, volatility needs to come down a lot. Low volatility isn’t sufficient for it to take off, but is probably is necessary. If you take the traditional definition of a currency as a “store of value”, a “medium of exchange”, and a “unit of account”, persistently high volatility is absolutely a death knell. This is especially true in Bitcoin’s case where there is no government backing and there are attractive substitutes in traditional currencies.&lt;/p&gt;

&lt;p&gt;One of the cool things about Bitcoin, however, is that lots of the data is fairly open. Most of the rest of the financial market data in the U.S. is behind the copyright lock and seal of the major exchanges and electronic trading networks. Both the NYSE and NASDAQ make lots of money off of selling market data, and they recently won &lt;a title=&quot;SEC court case on market data fees&quot; href=&quot;http://www.reuters.com/article/2013/04/30/us-sec-exchanges-netcoalition-idUSBRE93T0Q220130430&quot;&gt;a court case to raise their rates even further&lt;/a&gt;. That makes doing this kind of analysis on other securities an expensive endeavor for armchair quarterbacks like myself!&lt;/p&gt;

&lt;p&gt;Bitcoin, however, has a rather open ethos and most of the exchanges publish realtime or near-realtime price data for free. CoinDesk aggregates this into their &lt;a title=&quot;Bitcoin Price Index&quot; href=&quot;http://www.coindesk.com/price/&quot;&gt;Bitcoin Price Index&lt;/a&gt;, which they graciously agreed to send over for this analysis.&lt;/p&gt;

&lt;p&gt;The Volatility of Bitcoin Index (VOB Index—I’m open to suggestions on the name) is a simple rolling standard deviation of minutely log-returns. That is not nearly as complicated as it sounds. To create the index, I started with a time series of minutely Bitcoin price data and calculated the &lt;a title=&quot;Wikipedia - Log Returns&quot; href=&quot;http://en.wikipedia.org/wiki/Rate_of_return#Comparing_ordinary_return_with_logarithmic_return&quot;&gt;log returns&lt;/a&gt; (basically percent increase or decrease for each minute).  Then for each period, I took all of the returns within a trailing window and computed the standard deviation. I did this for three window lengths: 30, 60 and 90 days, and then annualized it. The Bitcoin markets are 24/7/365, so there are no holiday or weekend adjustments, which makes things a bit easier.&lt;/p&gt;

&lt;p&gt;Here’s what the index looks like for the period August 2011 to January 31, 2014.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-256&quot; alt=&quot;Volatility of Bitcoin Index&quot; src=&quot;http://andyfiedler.com/wp-content/uploads/2014/02/vob_plot.png&quot; width=&quot;800&quot; height=&quot;462&quot; /&gt;Here’s the BPI (Bitcoin Price Index) over that period.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-257&quot; alt=&quot;BPI Index&quot; src=&quot;http://andyfiedler.com/wp-content/uploads/2014/02/bpi_plot.png&quot; width=&quot;800&quot; height=&quot;462&quot; /&gt;
Bitcoin volatility looks like it is dropping over time, especially from the early days in 2011 and 2012, except for a large bump in volatility in April of 2013. That was probably sparked by problems at Bitcoin’s largest exchange, Mt. Gox during that time period. This decrease is despite an increase in speculative interest in Bitcoin and moves by China to curtail the currency’s use.&lt;/p&gt;

&lt;p&gt;Whether Bitcoin takes off is anyone’s guess and predicting if it does is probably a fool’s errand. There are lots of smart people working on it, but big questions about its viability still remain. In either case, it should be exciting to watch!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tech Predictions for 2014</title>
   <link href="/2014/01/tech-predictions-for-2014"/>
   <updated>2014-01-28T21:42:19+00:00</updated>
   <id>/2014/01/tech-predictions-for-2014</id>
   <content type="html">&lt;p&gt;This is a just a bunch of fun tech predictions for 2014. I can’t claim any insider knowledge, but it will be interesting to look back on them at the end of the year to see what the outcomes are!&lt;/p&gt;
&lt;h2&gt;Bitcoin will become &quot;legitimate&quot;, but not widespread&lt;/h2&gt;
&lt;p&gt;In 2014, regulators will likely issue guidance on how exactly companies and people can deal in Bitcoin without running afoul of anti-money laundering and money transmitter regulations, and how it is to be taxed. This will “legitimize” Bitcoin, but because of the difficulty of using the cryptocurrency and the insane &lt;a title=&quot;Bitcoin Volatility - Business Insider&quot; href=&quot;http://www.businessinsider.com/bitcoin-volatility-2013-12&quot; target=&quot;_blank&quot;&gt;amount of volatility of Bitcoin&lt;/a&gt; against fiat money, it will not become mainstream in 2014. Instead, Bitcoin will be relegated to particular types of transactions that the mainstream banks are either not accepting (due to the high probability of fraud or high compliance costs) or are charging exorbitant fees to facilitate. These will likely be cross-border transactions, especially in countries with capital controls (Argentina), &lt;a title=&quot;Banks Say No to Marijuana Money, Legal or Not - NY Times&quot; href=&quot;http://www.nytimes.com/2014/01/12/us/banks-say-no-to-marijuana-money-legal-or-not.html&quot; target=&quot;_blank&quot;&gt;legally grey-area transactions&lt;/a&gt;, or transactions that the major payment processors don’t accept.&lt;/p&gt;
&lt;h2&gt;Docker plus Deis or Flynn will result in an &quot;open-source Heroku&quot; and lots of dev-ops innovation&lt;/h2&gt;
&lt;p&gt;Heroku is probably one of the biggest dev-ops innovations in the last five years, making it vastly easier to deploy web applications, freeing development teams to actually build applications instead of focusing on DevOps. Heroku’s &lt;a href=&quot;http://12factor.net&quot;&gt;12 Factor App&lt;/a&gt; architecture is now widely used and 2014 will see that continuing. However, Heroku has a few problems.&lt;/p&gt;

&lt;p&gt;First, There currently isn’t a good way to “build your own Heroku” out of open source components. If Heroku is too constraining, you are forced to spin up your own servers on Amazon Web Services for part of your application, which eliminates lots of the advantages Heroku brings to the table. Last year there was a ton of excitement about Linux containers (LXC) and Docker, which is abstraction on top of LXC that makes them easier to manage. Both Heroku and Google Cloud use Linux containers internally, but they are closed-source implementations. Docker will likely begin to change that this year.&lt;/p&gt;

&lt;p&gt;However, Docker alone is not a Heroku replacement. Much of the innovation in Heroku lies in the build packs and routing mesh, which Docker does not provide. Two other open source projects aim to become that layer on top of Docker, and these are the ones I’m most excited to watch. The first is &lt;a href=&quot;http://deis.io/&quot; target=&quot;_blank&quot;&gt;Deis&lt;/a&gt;, which seems to be the furthest along in creating an open-source Heroku. Deis has both a routing mesh and an application layer created as well as scripts to automatically scale your “personal Heroku” on AWS, Digital Ocean and Rackspace. Flynn has many of the same goals, but doesn’t appear to be as far along. Deis has commercial support from Opsware, while &lt;a href=&quot;https://flynn.io/&quot; target=&quot;_blank&quot;&gt;Flynn is raising money Kickstarter-style&lt;/a&gt; to build out their platform. In any case, while Heroku is great, it is very exciting to see open source competitors come to the scene.&lt;/p&gt;
&lt;h2&gt;AngularJS and EmberJS will win the front-end wars for web apps&lt;/h2&gt;
&lt;p&gt;For highly interactive web apps, both AngularJS and EmberJS will become the clear choices in 2014. Backbone, Knockout and other front-end JS frameworks will see declining usage simply because they don’t provide as much of a framework as AngularJS or EmberJS. For new sites except for “CMS-like” apps, people will stop generating HTML on the server and push the page rendering to Javascript on the browser. Because of this, back-end frameworks will pivot towards being better REST API servers and focus less on their HTML template rendering abilities. The wildcard is “CMS-style” sites that need to be indexed by Google. While Google’s crawler can execute Javascript, content-heavy sites will still need a mechanism to serve HTML from the server for reliable SEO. This means that full-stack Rails apps will still be important in 2014. I think the writing is on the wall for this kind of app, however.&lt;/p&gt;
&lt;h2&gt;Mobile will continue to be &quot;write twice&quot; for the highest quality&lt;/h2&gt;
&lt;p&gt;Unfortunately, while HTML5 is great, it still won’t deliver the highest quality apps on mobile in 2014. As a cost-saving measure, or for apps that don’t need lots of interaction, HTML5 will be a viable choice. However, to create the highest-quality mobile apps in 2014, we’ll still need to write them twice: once for Android and once for iOS.&lt;/p&gt;
&lt;h2&gt;Wearable tech won’t be mainstream; in fact, society will push back from being &quot;always connected&quot;&lt;/h2&gt;
&lt;p&gt;Google Glass and the like will remain curiosities and not mainstream. In fact, I think that people are beginning to push back from being always connected to the Internet. Smartphone usage in many social situations is become a faux pas and the word &lt;a title=&quot;I, Glasshole&quot; href=&quot;http://www.wired.com/gadgetlab/2013/12/glasshole/&quot; target=&quot;_blank&quot;&gt;“glassholes”&lt;/a&gt; has already been coined for people that wear Google Glass in public. That being said, we will see the Internet smartly integrated into more consumer products, including continued innovation in automobile technology and home automation. The key for the “Internet of things” in 2014 will be &lt;i&gt;unobtrusive, discrete, and large value-add&lt;/i&gt;, which probably isn’t wearable technology in its current form.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Motorcycling in Laos</title>
   <link href="/2013/08/motorcycling-in-laos"/>
   <updated>2013-08-13T16:16:59+00:00</updated>
   <id>/2013/08/motorcycling-in-laos</id>
   <content type="html">&lt;p&gt;Last month I spent a week motorcycling around Laos with a friend, starting at the capital and heading north through probably one of the most scenic parts of Southeast Asia. This is still a fairly undeveloped part of the world, meaning empty roads, not many other tourists, and an unspoiled landscape. It also means the logistics of this trip were not easy, but the ride was definitely worth it. If you are interested in doing a trip like this, read on!&lt;/p&gt;
&lt;h2&gt;Preparing for the trip&lt;/h2&gt;
&lt;p&gt;Roads in Laos range from two lanes and decent blacktop on the main highways to muddy dirt tracks in the villages, so you will want to be a fairly proficient rider with at least some dirt biking experience before you go. We went early in the rainy season, which contributed to the mud, but even in the dry season, a lot of the smaller roads will require some dirt riding skills.&lt;/p&gt;

&lt;p&gt;The two most sensible starting points for a trip like this are the capital, Vientiane, and Luang Prabang, a UNESCO World Heritage Town about 340km to the north. Both cities have international airports, but they are very small, so expect to fly through a major Asian hub like Bangkok or Seoul if coming from the U.S. or Europe. You can also take a bus from Thailand, Cambodia or Vietnam if you are already in Southeast Asia, but expect it to be an overnight bus (12 hours+) on mountainous, winding roads.&lt;/p&gt;
&lt;h2&gt;Renting bikes&lt;/h2&gt;
&lt;p&gt;We rented a Honda CRF250 and CRF230 from &lt;a title=&quot;Remote Asia Outfitters&quot; href=&quot;http://remoteasia.com&quot; target=&quot;_blank&quot;&gt;Remote Asia&lt;/a&gt; in Vientiane, who were excellent. The bikes were in great shape and Jim from Remote Asia was very helpful when we had a minor mishap (I lost an ignition key to my bike!). You really will want to rent bikes from someone who can also provide a cell phone and “roadside assistance”, and by that I mean basically translating via cell phone and recommending mechanics. English is not widely spoken in Laos and emergency services are non-existent, so you will want an English speaking contact in-country from your rental agency.&lt;/p&gt;

&lt;p&gt;We had no issues with Laotian police (in fact we did not see any outside of Vientiane), so it would seem that you don’t strictly need an International Drivers License or a motorcycle license at all. Your rental bike should come with a Laotian number plate and turn signals, and riding with a headlight during the day is apparently illegal so should be avoided.&lt;/p&gt;
&lt;h2&gt;The route&lt;/h2&gt;
&lt;p&gt;Laos has a few excellent motorcycle routes, and the one we took seems to be the most popular. You can order an excellent map of Laos with elevation profiles, road conditions, and city maps from GT Rider in Thailand &lt;a href=&quot;http://www.gt-rider.com/maps-of-thailand-laos-maps/laos-guide-map&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. This route took us 6 days of riding at a fairly leisurely pace. There are three long days of riding (over 150km) and one day each spent in Vang Vieng, Ponsavan, and Luang Prabang that you can use to explore the area surrounding these cities.&lt;/p&gt;

&lt;p&gt;In addition to the GT Rider map, you should also get an Open Street Map app for your smart phone. OSM actually had pretty good coverage of Laos, including some of the caves and waterfalls outside of the cities. For Android, try &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.osmand&quot;&gt;OSMAnd&lt;/a&gt;, which lets you download country maps for offline use.&lt;/p&gt;

&lt;p&gt;Here’s a map of the route we took and details of each leg.&lt;/p&gt;

&lt;iframe src=&quot;https://maps.google.com/maps/ms?msa=0&amp;amp;msid=213059449424618329795.0004e1d4c6c3d82758c09&amp;amp;ie=UTF8&amp;amp;t=p&amp;amp;ll=18.921876,102.661743&amp;amp;spn=2.494061,3.515625&amp;amp;z=8&amp;amp;output=embed&quot; width=&quot;640&quot; height=&quot;480&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; securitykey=&quot;da39a3ee5e6b4b0d3255bfef95601890afd80709&quot;&gt;&lt;/iframe&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;Vientiane to Vang Vieng, 154km&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130712_134937-800-ea6376aff.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130712_134937-400-ea6376aff.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130712_134937-600-ea6376aff.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130712_134937-800-ea6376aff.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130712_134937-1000-ea6376aff.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130712_145318-800-fac0b42a3.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130712_145318-400-fac0b42a3.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130712_145318-600-fac0b42a3.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130712_145318-800-fac0b42a3.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130712_145318-1000-fac0b42a3.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130712_124142-800-963aebf90.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130712_124142-400-963aebf90.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130712_124142-600-963aebf90.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130712_124142-800-963aebf90.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130712_124142-1000-963aebf90.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If picking up your bikes in Vientiane, likely your first stop will be &lt;a href=&quot;http://en.wikipedia.org/wiki/Vang_Vieng&quot; target=&quot;_blank&quot;&gt;Vang Vieng&lt;/a&gt;. The ride to Vang Vieng is 154 km and fairly easy and flat until the last 50km or so where there are some small hills. Leaving Vientiane is where you will probably encounter the most traffic of the trip (not much!), but within 50km, it drops off a lot.&lt;/p&gt;

&lt;p&gt;Vang Vieng is a tourist town along the Nam Song river with lots of caving, waterfalls, and rafting available nearby. It is definitely worth at least one whole day exploring outside of the town. I think of the three towns we visited, Vang Vieng had the most spectacular scenery. The town is surrounded by a dramatic &lt;a href=&quot;http://en.wikipedia.org/wiki/Karst_topography&quot;&gt;karst landscape&lt;/a&gt; that is even more surreal in the rainy season when the peaks are surrounded in fog. In Vang Vieng, we went to a cave, waterfall and “blue lagoon” (swimming hole) on our one full day there. These were all found on dirt paths leading out from the town, for which Open Street Map was a real help locating.&lt;/p&gt;
&lt;h3&gt;Vang Vieng to Ponsavan, 233km&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130713_074030-800-bf87cfc73.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130713_074030-400-bf87cfc73.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130713_074030-600-bf87cfc73.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130713_074030-800-bf87cfc73.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130713_074030-1000-bf87cfc73.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130714_074338-800-79eab927b.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130714_074338-400-79eab927b.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130714_074338-600-79eab927b.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130714_074338-800-79eab927b.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130714_074338-1000-79eab927b.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130713_142645-800-b968f1cf2.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130713_142645-400-b968f1cf2.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130713_142645-600-b968f1cf2.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130713_142645-800-b968f1cf2.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130713_142645-1000-b968f1cf2.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The second long day of riding, Vang Vieng to Ponsavan, is 233 km of challenging riding with tons of very steep switchbacks and incredible views of some of the highest peaks in Laos. On this part of the ride, you are heading to &lt;a href=&quot;http://wikitravel.org/en/Phonsavan&quot;&gt;Ponsavan&lt;/a&gt;, which is the capital of the providence containing the &lt;a href=&quot;http://wikitravel.org/en/Plain_of_Jars&quot;&gt;Plain of Jars&lt;/a&gt;, a neolithic archeological site with large stone jars (some over 4 feet tall). The Plain of Jars was also bombed heavily during the Vietnam War as part of the CIA’s covert war in Laos, so there is lots of war history in this area as well. Ponsavan has a few NGOs operating to clear unexploded ordinance that have interesting exhibits in the town on the war.&lt;/p&gt;
&lt;h3&gt;Ponsavan to Luang Prabang, 259km&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130715_111204-800-92f15b1ac.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130715_111204-400-92f15b1ac.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130715_111204-600-92f15b1ac.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130715_111204-800-92f15b1ac.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130715_111204-1000-92f15b1ac.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130718_143756-800-cca6c1128.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130718_143756-400-cca6c1128.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130718_143756-600-cca6c1128.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130718_143756-800-cca6c1128.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130718_143756-1000-cca6c1128.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/IMG_20130716_083641-800-551cb1517.jpg&quot; srcset=&quot;/generated/wp/uploads/2013/08/IMG_20130716_083641-400-551cb1517.jpg 400w, /generated/wp/uploads/2013/08/IMG_20130716_083641-600-551cb1517.jpg 600w, /generated/wp/uploads/2013/08/IMG_20130716_083641-800-551cb1517.jpg 800w, /generated/wp/uploads/2013/08/IMG_20130716_083641-1000-551cb1517.jpg 1000w&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The last long day of riding will take you 259 km from Ponsavan to Luang Prabang (backtracking to Pho Khoun, then north to Luang Prabang). Backtracking in this way isn’t all that bad because the scenery and riding is so great heading from Pho Khoun to Ponsavan, you’ll have no problem doing it twice.&lt;/p&gt;

&lt;p&gt;Pho Khoun makes a good stopping place for lunch, as its about at the midpoint of this ride and there are a few places to refuel and grab lunch. From Pho Khoun, you’ll have similar riding (and that’s to say great!) to Luang Prabang.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wikitravel.org/en/Luang_Prabang&quot;&gt;Luang Prabang&lt;/a&gt; is a UNESCO World Heritage Site and has by far the best developed tourist infrastructure of the three cities we visited. Luang Prabang is at the intersection of the Mekong River and the Nam Khan River and has a large temple in the center of the city with great views of both rivers. There are waterfalls about 20km outside of town as well as rafting, elephant tours, and kayaking if you choose to stay here for a few days.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/generated/wp/uploads/2013/08/laos_ride_profile-800-7b5fa5e8a.png&quot; srcset=&quot;/generated/wp/uploads/2013/08/laos_ride_profile-400-7b5fa5e8a.png 400w, /generated/wp/uploads/2013/08/laos_ride_profile-600-7b5fa5e8a.png 600w, /generated/wp/uploads/2013/08/laos_ride_profile-800-7b5fa5e8a.png 800w, /generated/wp/uploads/2013/08/laos_ride_profile-1000-7b5fa5e8a.png 1000w&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Using NGINX to proxy TileStache </title>
   <link href="/2012/08/using-nginx-to-proxy-tilestache"/>
   <updated>2012-08-30T16:54:18+00:00</updated>
   <id>/2012/08/using-nginx-to-proxy-tilestache</id>
   <content type="html">&lt;p&gt;I'm working on a re-rendering of OpenStreetMap for hiking, with hill shading and topographic lines and I decided to use TileStache to render the tiles. TileStache has the nice ability to render tiles from a bunch of different sources and then overlay them with different amounts of transparency and layer masks (just like Photoshop). TileStache is a Python WSGI server that you can run in mod_python or GUnicorn to serve tiles directly over HTTP. TileStache can cache map tiles to the file system and serve the static PNGs if they exist or render them from scratch using Mapnik if they don't. Its pretty fast, especially if the tiles are pre-rendered.&lt;/p&gt;
&lt;p&gt;However, GUnicorn is a pre-forking server. This means that it needs to fork a different process for each client connection. What happens if a slow client connects is that TileStache processes are rapidly used up to serve that client (typically clients make up to 8 separate HTTP connections for slippy maps, resulting in 8 processes each!). This is the case even if the tiles are being served from cache.&lt;/p&gt;
&lt;p&gt;What you need to do is add a reverse proxy in front of GUnicorn, using something like NGINX. The reverse proxy using an evented IO model, which enables it to manage sending data back to a slow client without using an operating system process. NGINX can also directly serve static assets from the filesystem, which means we can serve the cached tiles without even hitting GUnicorn&amp;#47;TileStache.&lt;/p&gt;
&lt;p&gt;Getting this to work requires a bit of NGINX HttpRewriteModule voodoo, though. The issue is that TileStache saves cached tiles in a slightly different path than the URI path that comes in via HTTP. Say you have a OpenStreetMap-style URL like this: &lt;code&gt;myserver.com&amp;#47;tiles&amp;#47;layer&amp;#47;$z&amp;#47;$x&amp;#47;$y.png&amp;lt;&amp;#47;code&amp;gt;. In this URL, &lt;code&gt;$z&amp;lt;&amp;#47;code&amp;gt; is zoom level (usually 1-19), and &lt;code&gt;$x&amp;lt;&amp;#47;code&amp;gt; and &lt;code&gt;$y&amp;lt;&amp;#47;code&amp;gt; are tile coordinates. For higher zoom levels, you can have 10,000+ by 10,0000+ tiles in the x and y directions. That's way too many PNG files to store in one folder on the filesystem. So, TileStache splits up the x and y paths into two levels. Say you have a URL like &lt;code&gt;&amp;#47;tiles&amp;#47;layer&amp;#47;7&amp;#47;12345&amp;#47;67890.png&amp;lt;&amp;#47;code&amp;gt;. TileStache will store that in the filesystem path &lt;code&gt;&amp;#47;tiles&amp;#47;layer&amp;#47;7&amp;#47;012&amp;#47;345&amp;#47;067&amp;#47;890.png&amp;lt;&amp;#47;code&amp;gt;. Notice how 12345 is broken into 012&amp;#47;345? That means that there will be at most 1,000 files or folders in each directory&amp;mdash;a manageable amount. The issue is we need to get NGINX to rewrite URLs to server these static assets. Here's how I accomplished that:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true&quot; title=&quot;Main NGINX location directive&quot;&gt;	location ~ ^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]+)\&amp;#47;([\d]+)\.png {&lt;br /&gt;
		root &amp;#47;osm&amp;#47;cache;&amp;lt;/p&amp;gt;
&lt;p&gt;		set $originaluri &amp;#47;$1&amp;#47;$2&amp;#47;$3&amp;#47;$4.png;&lt;/p&gt;
&lt;p&gt;		# 1 char X&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})\&amp;#47;([\d]{1}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;00$3&amp;#47;000&amp;#47;00$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})\&amp;#47;([\d]{2}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;00$3&amp;#47;000&amp;#47;0$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})\&amp;#47;([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;00$3&amp;#47;000&amp;#47;$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})\&amp;#47;([\d]{1})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;00$3&amp;#47;00$4&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})\&amp;#47;([\d]{2})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;00$3&amp;#47;0$4&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})\&amp;#47;([\d]{3})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;00$3&amp;#47;$4&amp;#47;$5.png break;&lt;/p&gt;
&lt;p&gt;		# 2 char X&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})\&amp;#47;([\d]{1}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;0$3&amp;#47;000&amp;#47;00$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})\&amp;#47;([\d]{2}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;0$3&amp;#47;000&amp;#47;0$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})\&amp;#47;([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;0$3&amp;#47;000&amp;#47;$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})\&amp;#47;([\d]{1})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;0$3&amp;#47;00$4&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})\&amp;#47;([\d]{2})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;0$3&amp;#47;0$4&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})\&amp;#47;([\d]{3})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;0$3&amp;#47;$4&amp;#47;$5.png break;&lt;/p&gt;
&lt;p&gt;		# 3 char X&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})\&amp;#47;([\d]{1}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;$3&amp;#47;000&amp;#47;00$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})\&amp;#47;([\d]{2}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;$3&amp;#47;000&amp;#47;0$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})\&amp;#47;([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;$3&amp;#47;000&amp;#47;$4.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})\&amp;#47;([\d]{1})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;$3&amp;#47;00$4&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})\&amp;#47;([\d]{2})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;$3&amp;#47;0$4&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})\&amp;#47;([\d]{3})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;000&amp;#47;$3&amp;#47;$4&amp;#47;$5.png break;&lt;/p&gt;
&lt;p&gt;		# 4 char X&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})([\d]{3})\&amp;#47;([\d]{1}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;00$3&amp;#47;$4&amp;#47;000&amp;#47;00$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})([\d]{3})\&amp;#47;([\d]{2}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;00$3&amp;#47;$4&amp;#47;000&amp;#47;0$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})([\d]{3})\&amp;#47;([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;00$3&amp;#47;$4&amp;#47;000&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})([\d]{3})\&amp;#47;([\d]{1})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;00$3&amp;#47;$4&amp;#47;00$5&amp;#47;$6.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})([\d]{3})\&amp;#47;([\d]{2})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;00$3&amp;#47;$4&amp;#47;0$5&amp;#47;$6.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{1})([\d]{3})\&amp;#47;([\d]{3})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;00$3&amp;#47;$4&amp;#47;$5&amp;#47;$6.png break;&lt;/p&gt;
&lt;p&gt;		# 5 char X&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})([\d]{3})\&amp;#47;([\d]{1}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;0$3&amp;#47;$4&amp;#47;000&amp;#47;00$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})([\d]{3})\&amp;#47;([\d]{2}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;0$3&amp;#47;$4&amp;#47;000&amp;#47;0$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})([\d]{3})\&amp;#47;([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;0$3&amp;#47;$4&amp;#47;000&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})([\d]{3})\&amp;#47;([\d]{1})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;0$3&amp;#47;$4&amp;#47;00$5&amp;#47;$6.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})([\d]{3})\&amp;#47;([\d]{2})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;0$3&amp;#47;$4&amp;#47;0$5&amp;#47;$6.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{2})([\d]{3})\&amp;#47;([\d]{3})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;0$3&amp;#47;$4&amp;#47;$5&amp;#47;$6.png break;&lt;/p&gt;
&lt;p&gt;		# 6 char X&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})([\d]{3})\&amp;#47;([\d]{1}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;$3&amp;#47;$4&amp;#47;000&amp;#47;00$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})([\d]{3})\&amp;#47;([\d]{2}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;$3&amp;#47;$4&amp;#47;000&amp;#47;0$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})([\d]{3})\&amp;#47;([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;$3&amp;#47;$4&amp;#47;000&amp;#47;$5.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})([\d]{3})\&amp;#47;([\d]{1})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;$3&amp;#47;$4&amp;#47;00$5&amp;#47;$6.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})([\d]{3})\&amp;#47;([\d]{2})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;$3&amp;#47;$4&amp;#47;0$5&amp;#47;$6.png break;&lt;br /&gt;
		rewrite &quot;^\&amp;#47;tiles\&amp;#47;([\w\-]+)\&amp;#47;([\d]+)\&amp;#47;([\d]{3})([\d]{3})\&amp;#47;([\d]{3})([\d]{3}).png$&quot; &amp;#47;$1&amp;#47;$2&amp;#47;$3&amp;#47;$4&amp;#47;$5&amp;#47;$6.png break;&lt;/p&gt;
&lt;p&gt;		# Try to serve the file from the disk. If that doesn't work, pass through the request via the proxy&lt;br /&gt;
		try_files $uri @tilestache;&lt;br /&gt;
	}&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
This mountain of rewrite lines will rewrite the request URL to the filesystem format, then look for tiles in the filesystem tree starting at &lt;code&gt;&amp;#47;osm&amp;#47;cache&amp;lt;&amp;#47;code&amp;gt;. The last line tells NGINX to look for the rewritten URL, then if the file is not found, to send the request to the &lt;code&gt;@tilestache;&amp;lt;&amp;#47;code&amp;gt; location block, which looks like this:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true &quot; title=&quot;Proxy NGINX block&quot;&gt;	 location @tilestache {&amp;lt;/p&amp;gt;
&lt;p&gt;		# Rewrite back to standard OSM form&lt;br /&gt;
		rewrite ^(.*)$ $originaluri break;&lt;br /&gt;
		add_header X-Static miss;&lt;br /&gt;
		proxy_pass http:&amp;#47;&amp;#47;127.0.0.1:8080;&lt;br /&gt;
		proxy_set_header Host $http_host;&lt;br /&gt;
	}&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
That location block proxies the request to the GUnicorn server listening on localhost:8080.&lt;/p&gt;
&lt;p&gt;This seems to be working great. NGINX is far faster in serving static assets, and if all of the worker TileStache processes are busy rendering, the cached zoom levels of the map work fine!&lt;/p&gt;
&lt;/pre&gt;&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>OpenStreetMap's rising popularity</title>
   <link href="/2012/08/openstreetmaps-rising-popularity"/>
   <updated>2012-08-28T22:30:04+00:00</updated>
   <id>/2012/08/openstreetmaps-rising-popularity</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http:&amp;#47;&amp;#47;arstechnica.com&amp;#47;business&amp;#47;2012&amp;#47;08&amp;#47;craigslist-is-on-board-openstreetmap-continues-soaring-to-new-heights&amp;#47;&quot;&gt;Craigslist is on board: OpenStreetMap soars to new heights&amp;lt;&amp;#47;a&amp;gt;&amp;lt;/p&amp;gt;
&lt;p&gt;Craigslist is now using OpenStreetMap for showing the location of apartment listings! This is great for two reasons. First, looking for apartments will become much easier on Craigslist. Second, it's validation that OpenStreetMap's dataset is hugely valuable and robust enough for commercial use. Hopefully, I'll be rolling out my OpenStreetMap project within the next week or so. The project is a re-rendering of the basic slippy map with topographic lines and hiking trails taking more&amp;nbsp;prominence. More to come!&lt;/p&gt;
&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Backbone.js: Thankfully, a great MVC framework for the frontend</title>
   <link href="/2012/08/backbone-js-thankfully-a-great-mvc-framework-for-the-frontend"/>
   <updated>2012-08-28T21:45:00+00:00</updated>
   <id>/2012/08/backbone-js-thankfully-a-great-mvc-framework-for-the-frontend</id>
   <content type="html">&lt;h2&gt;Frameworks, frameworks...&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
On the backend, web development frameworks have been growing quickly in popularity. Rails, Django, CakePHP, and others are popular because they save developers a ton of time. Someone once said that a good developer is a lazy developer, and frameworks enable developers to kick back with a Corona on a beach (well, not quite, but close) by making a lot of the architectural decisions for the developer. Rails is a great example of this, with a clear MVC structure, preset file system&amp;nbsp;hierarchy, and even database schema conventions. If you were coding a site in pure Ruby, you'd need to make all of these decision yourself.&amp;lt;/p&amp;gt;
&lt;p&gt;While backend frameworks are really popular, there has been a dearth of good choices in front end frameworks. As web apps are moving more processing to client-side Javascript, this was becoming a growing problem.&lt;/p&gt;
&lt;h2&gt;The front-end Javascript jungle&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
Front-end javascript tends to be a huge mess of jQuery callbacks, DOM elements stuffed with extra object properties, and a polluted root &lt;code&gt;window&amp;lt;&amp;#47;code&amp;gt; object. As client-side applications are get larger, this is completely unsustainable. It makes code hard to maintain, hard to understand, and un-testable with unit testing libraries. Backbone.js greatly helps with all of these issues.&amp;lt;/p&amp;gt;
&lt;h2&gt;Enter Backbone.js&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
Backbone is a minimalist MVC framework for Javascript. It adds models and collections with persistance code that works well with JSON REST APIs, as well as views that automatically re-render on model updates and controllers that handle hash-bang URLs or HTML5 &lt;code&gt;pushState&amp;lt;&amp;#47;code&amp;gt;.&amp;lt;/p&amp;gt;
&lt;p&gt;All of this comes in 4KB of minified Javascript that ties in with jQuery, Underscore, or any other Javascript library.&lt;/p&gt;
&lt;h2&gt;Backbone dos and don'ts&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
I'm currently working on a small side project to brush up on some Javascript coding, and decided to use Backbone as a front-end framework (I'm using Rails on the backend). Here's some brief notes from a my first impressions:&amp;lt;/p&amp;gt;
&lt;p&gt;&lt;strong&gt;Do&amp;lt;&amp;#47;strong&amp;gt;&amp;lt;/p&amp;gt;
&lt;ul&gt;
&lt;li&gt;Put most of your front-end application (or business) logic in the models. This is basically the same thing you would do with a MVC app on the server.&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Use a templating library. Underscore.js has a pretty decent &lt;code&gt;_.template()&amp;lt;&amp;#47;code&amp;gt; function. HTML in really clutters your Javascript code.&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Try using the Rails asset pipeline or some other way to minify and compile your JS. This way, you can spread your Backbone code out into many files. I tended to use a folder&amp;nbsp;hierarchy&amp;nbsp;similar to Rails (folders for models, collections, controllers, and views).&amp;lt;&amp;#47;li&amp;gt;&lt;br /&gt;
&amp;lt;&amp;#47;ul&amp;gt;&lt;br /&gt;
&lt;strong&gt;Don't&amp;lt;&amp;#47;strong&amp;gt;&amp;lt;/p&amp;gt;
&lt;ul&gt;
&lt;li&gt;Put much logic in your views. It is&amp;nbsp;&lt;em&gt;very&amp;lt;&amp;#47;em&amp;gt;&amp;nbsp;hard to debug view code because the function that renders the view is typically created&amp;nbsp;programmatically&amp;nbsp;by the templating library.&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Don't prematurely optimize your view code. The easiest way to render a view is to just create an HTML fragment from a templating library then insert it into the DOM with jQuery. This is fine for most cases. You can also manipulate the DOM by changing the inner text of elements on a view re-render, which might be faster but often isn't worth the extra work.&amp;lt;&amp;#47;li&amp;gt;&lt;br /&gt;
&amp;lt;&amp;#47;ul&amp;gt;&amp;lt;/p&amp;gt;
&lt;/li&gt;&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/code&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/h2&gt;&lt;/code&gt;&lt;/h2&gt;&lt;/code&gt;&lt;/h2&gt;&lt;/h2&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Capistrano to deploy Rails apps from Gitolite</title>
   <link href="/2012/08/using-capistrano-to-deploy-rails-apps-from-gitolite"/>
   <updated>2012-08-23T21:29:25+00:00</updated>
   <id>/2012/08/using-capistrano-to-deploy-rails-apps-from-gitolite</id>
   <content type="html">&lt;p&gt;Here, I'll show you how to deploy a Rails app from a Gitolite repository via Capistrano. In this example, I'm running a Phusion Passenger on NGINX on Ubuntu 10.04. The instructions should be very similar for Ubuntu 12.04.&lt;/p&gt;
&lt;p&gt;First, understand what we're doing here. I'm assuming you are using Gitolite for version control (although similar instructions would probably work for Github). We're going to add a read-only deployment key to the Gitolite repository. When you run &lt;code&gt;cap deploy&amp;lt;&amp;#47;code&amp;gt;, Capistrano will log into your production server via SSH (using public key authentication). Then the Capistrano script will instruct the production server to check out the latest version of your app from the Gitolite repository into a directory on the production server. Finally, the Capistrano script will change a symlink to the new version of your app and instruction Phusion Passenger to reload the app into memory on the next hit.&amp;lt;/p&amp;gt;
&lt;h2&gt;Setting up your production server&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
Create a new user for deployment-related tasks on your production server. Switch to that user.&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:sh&quot;&gt;sudo adduser deployuser&lt;br /&gt;
sudo su - deployuser&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
Now, generate some SSH keys for that user. Run as the deployuser:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:sh&quot;&gt;ssh-keygen -t rsa&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
I don't typically enter a password for this keypair. The reason is that this keypair is only used for read-only access to your code repository in Gitolite. If your code is highly sensitive, you might want a password. If you enter one here, you will be prompted for it each time you deploy code.&amp;lt;/p&amp;gt;
&lt;p&gt;Now, wherever you have your Gitolite admin repository checked out, open it up and add the public key to your keydir folder. I like to keep my deployment keys in a subfolder called something like &quot;deployment&quot;.&lt;/p&gt;
&lt;p&gt;Say, for example, your Gitolite admin repository is at &lt;code&gt;~&amp;#47;repos&amp;#47;gitolite-admin&amp;lt;&amp;#47;code&amp;gt;. Switch to that path. Now enter the folder &lt;code&gt;keydir&amp;lt;&amp;#47;code&amp;gt;. Make a new subfolder called &lt;code&gt;deployment&amp;lt;&amp;#47;code&amp;gt;, and then a new file in that folder called something like &lt;code&gt;MyDeploymentKey.pub&amp;lt;&amp;#47;code&amp;gt;. Open that file in your editor and paste the public key that you just created from your deployment server. Typically, that key is found at &lt;code&gt;~&amp;#47;.ssh&amp;#47;id_rsa.pub&amp;lt;&amp;#47;code&amp;gt;.&amp;lt;/p&amp;gt;
&lt;p&gt;Now, open your &lt;code&gt;gitolite.conf&amp;lt;&amp;#47;code&amp;gt; file (in the &lt;code&gt;conf&amp;lt;&amp;#47;code&amp;gt; folder in your Gitolite repository). Find your project and add a directive to grant your deployment key read-only access. Here's an example project section:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true crayon-selected&quot;&gt;repo     my-project&lt;br /&gt;
         RW = JoeCoder&lt;br /&gt;
         R = MyDeploymentKey&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
Note that even though the deployment key could be in a subfolder, you still just enter the filename minus the &quot;.pub&quot;.&amp;lt;/p&amp;gt;
&lt;p&gt;Save the Gitolite files, commit and push to your Gitolite server.&lt;/p&gt;
&lt;h2&gt;Setting up Capistrano&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
Now, open up your Rails project you want to deploy. Add these gems:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:ruby&quot;&gt;# Gems for deployment&lt;br /&gt;
group :development do&lt;br /&gt;
  gem &quot;capistrano&quot;&lt;br /&gt;
  gem 'rvm-capistrano'&lt;br /&gt;
end&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
Run &lt;code&gt;bundle install&amp;lt;&amp;#47;code&amp;gt; and then from the top directory of your project, run &lt;code&gt;capify .&amp;lt;&amp;#47;code&amp;gt;. This adds Capistrano to your project. Open up &lt;code&gt;config&amp;#47;deploy.rd&amp;lt;&amp;#47;code&amp;gt; and add something like this:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:ruby&quot;&gt;require &quot;bundler&amp;#47;capistrano&quot;&lt;br /&gt;
require &quot;rvm&amp;#47;capistrano&quot;&amp;lt;/p&amp;gt;
&lt;p&gt;set :application,   &quot;myapp&quot;&lt;br /&gt;
set :domain,        &quot;mydomain.com&quot;&lt;br /&gt;
set :repository,    &quot;git@mygitoliteserver.com:mygitrepo&quot;&lt;br /&gt;
set :use_sudo,      false&lt;br /&gt;
set :deploy_to,     &quot;&amp;#47;srv&amp;#47;mydomain.com&amp;#47;public&amp;#47;#{application}&quot;&lt;br /&gt;
set :scm,           &quot;git&quot;&lt;br /&gt;
set :user,          &quot;deployuser&quot;&lt;/p&gt;
&lt;p&gt;role :app, domain&lt;br /&gt;
role :web, domain&lt;br /&gt;
role :db, domain, :primary =&amp;gt; true&lt;/p&gt;
&lt;p&gt;# Add RVM's lib directory to the load path.&lt;br /&gt;
set :rvm_ruby_string, 'ruby-1.9.3-p358'&lt;br /&gt;
set :rvm_type, :system&lt;/p&gt;
&lt;p&gt;namespace :deploy do&lt;br /&gt;
  task :start, :roles =&amp;gt; :app do&lt;br /&gt;
    run &quot;touch #{current_release}&amp;#47;tmp&amp;#47;restart.txt&quot;&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  task :stop, :roles =&amp;gt; :app do&lt;br /&gt;
    # Do nothing.&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;  desc &quot;Restart Application&quot;&lt;br /&gt;
  task :restart, :roles =&amp;gt; :app do&lt;br /&gt;
    run &quot;touch #{current_release}&amp;#47;tmp&amp;#47;restart.txt&quot;&lt;br /&gt;
  end&lt;/p&gt;
&lt;p&gt;end&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
This deploy script will checkout your code from the project myproject on mygitoliteserver.com and deploy it to &lt;code&gt;&amp;#47;srv&amp;#47;mydomain.com&amp;#47;public&amp;lt;&amp;#47;code&amp;gt; on your production server (make sure you create this directory). Whenever you deploy, Capistrano will touch &lt;code&gt;tmp&amp;#47;restart.txt&amp;lt;&amp;#47;code&amp;gt; so that Phusion Passenger restarts with the new code.&amp;lt;/p&amp;gt;
&lt;p&gt;Once you are finished editing this script, commit your changes, push your latest code to your Gitolite server.&lt;/p&gt;
&lt;h2&gt;Deciding who gets to deploy&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
For each user you want to allow to deploy code, have them generate a SSH key. On your deployment server, open or create &lt;code&gt;~deployuser&amp;#47;.ssh&amp;#47;authorized_keys&amp;lt;&amp;#47;code&amp;gt;. For each user you want to allow to deploy, add their public key (one key per line) to this file.&amp;lt;/p&amp;gt;
&lt;h2&gt;Deploying!&amp;lt;&amp;#47;h2&amp;gt;&lt;br /&gt;
Now, to test out deployment, run from your Rails root on your development machine (the machine that has the SSH key you added to &lt;code&gt;~deployuser&amp;#47;.ssh&amp;#47;authorized_keys&amp;lt;&amp;#47;code&amp;gt;), run &lt;code&gt;cap deploy&amp;lt;&amp;#47;code&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/code&gt;&lt;/h2&gt;&lt;/code&gt;&lt;/h2&gt;&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/h2&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/h2&gt;&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>5 Government datasets for building web apps</title>
   <link href="/2012/08/5-government-datasets-for-building-web-apps"/>
   <updated>2012-08-08T16:04:54+00:00</updated>
   <id>/2012/08/5-government-datasets-for-building-web-apps</id>
   <content type="html">&lt;p&gt;Recently, I've gotten interested in using some open government data to build useful web applications. There has been a bit of work in this space, with many Federal agencies sponsoring app contests for developers to create products that show off the agencies' datasets.&lt;a title=&quot;U.S. Government Apps Challenge&quot; href=&quot;http:&amp;#47;&amp;#47;challenge.gov&quot;&gt; Challenge.gov&amp;lt;&amp;#47;a&amp;gt; is the central listing of these app contests; take a look if you are interested in seeing what kind of challenges are open for entries. I've had a bit of experience working with government data and here's some of the most interesting datasets that I've found so far.&amp;lt;/p&amp;gt;
&lt;h3&gt;&lt;a href=&quot;http:&amp;#47;&amp;#47;www.census.gov&amp;#47;geo&amp;#47;www&amp;#47;tiger&amp;#47;&quot;&gt;U.S. Census TIGER&amp;lt;&amp;#47;a&amp;gt;&amp;lt;&amp;#47;h3&amp;gt;&lt;br /&gt;
This is the mother of all mapping datasets in the U.S. It contains most roads, populated places, and administrative boundaries (for counties and states). There is also a ton of demographic data available subset by geographic location. These are huge datasets, and would need specialized GIS knowledge to do much with. The OpenStreetMap project has imported most of the roads and administrative boundary data, making the U.S. portion of their map pretty detailed. One issue with TIGER data is that many of the roads in the dataset no longer exist. This is especially true in areas that have lost population, like abandoned towns or areas converted to national parks.&amp;lt;/p&amp;gt;
&lt;h3&gt;&lt;a href=&quot;http:&amp;#47;&amp;#47;research.stlouisfed.org&amp;#47;fred2&amp;#47;&quot;&gt;Federal Reserve Economic Data (FRED)&amp;lt;&amp;#47;a&amp;gt;&amp;lt;&amp;#47;h3&amp;gt;&lt;br /&gt;
Almost any conceivable economic indicator for the U.S., going back as far as government data exists. Want to know the USD&amp;#47;GBP exchange rate in 1974? Got it. CPI for 1951? No problem. There are also a lot of useful graphing tools built into the site and a nice REST API for accessing the data from web services.&amp;lt;/p&amp;gt;
&lt;h3&gt;&lt;a href=&quot;http:&amp;#47;&amp;#47;www.ncdc.noaa.gov&amp;#47;nexradinv&amp;#47;chooseday.jsp?id=klsx&quot;&gt;NOAA Weather Radars&amp;lt;&amp;#47;a&amp;gt;&amp;lt;&amp;#47;h3&amp;gt;&lt;br /&gt;
Historical RADARs back to the 1990s and near real-time radar images (10 minute or so delay). This website also has satellite images back to the 1970s. I'm sure there is some kind of really cool big data project you could create with these. Maybe show the historical&amp;nbsp;likelihood&amp;nbsp;of rain in a particular location on a particular day of the year, or check historical satellite images to determine when is the best change for a sunny day.&amp;lt;/p&amp;gt;
&lt;h3&gt;&lt;a href=&quot;http:&amp;#47;&amp;#47;www.sec.gov&amp;#47;edgar.shtml&quot;&gt;Securities and Exchange&amp;nbsp;Commission&amp;nbsp;EDGAR&amp;lt;&amp;#47;a&amp;gt;&amp;lt;&amp;#47;h3&amp;gt;&lt;br /&gt;
Near real-time display of all filings for&amp;nbsp;publicly-traded companies in the U.S. New share&amp;nbsp;issuance,&amp;nbsp;&amp;nbsp;corporate governance changes, and quarterly reports are all there.&amp;lt;/p&amp;gt;
&lt;h3&gt;&lt;a href=&quot;http:&amp;#47;&amp;#47;waterdata.usgs.gov&amp;#47;nwis&quot;&gt;USGS Stream Flow&amp;lt;&amp;#47;a&amp;gt;&amp;lt;&amp;#47;h3&amp;gt;&lt;br /&gt;
I'm mostly putting this on here because I check it frequently for kayaking. This site has near real-time data on the flow and temperature of many rivers in the U.S. The data comes from gauging stations operated by USGS.&amp;lt;/p&amp;gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/a&gt;&lt;/h3&gt;&lt;/a&gt;&lt;/h3&gt;&lt;/a&gt;&lt;/h3&gt;&lt;/a&gt;&lt;/h3&gt;&lt;/a&gt;&lt;/h3&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using TSDB to store U.S. Equities data from TickData</title>
   <link href="/2012/07/using-tsdb-to-store-u-s-equities-data-from-tickdata"/>
   <updated>2012-07-06T21:18:20+00:00</updated>
   <id>/2012/07/using-tsdb-to-store-u-s-equities-data-from-tickdata</id>
   <content type="html">&lt;p&gt;In this article, I'll show you how to use my&amp;nbsp;&lt;a title=&quot;Time Series Database&quot; href=&quot;http:&amp;#47;&amp;#47;andyfiedler.com&amp;#47;projects&amp;#47;time-series-database&amp;#47;&quot;&gt;Time Series Database&amp;lt;&amp;#47;a&amp;gt; to import some sample U.S. equities data from &lt;a href=&quot;http:&amp;#47;&amp;#47;www.tickdata.com&quot;&gt;TickData&amp;lt;&amp;#47;a&amp;gt;, a data provider of high-frequency historical financial data. First, get the &lt;a href=&quot;http:&amp;#47;&amp;#47;www.tickdata.com&amp;#47;downloads&amp;#47;SampleEquityData_US.zip&quot;&gt;sample data&amp;lt;&amp;#47;a&amp;gt; and unzip it on your computer. Look in the Quotes folder for a file called GLP_27667.asc. This is file has quotes for Global Partners LP, a petroleum company. If you are running on Mac OS X or Linux, you can use the &lt;code&gt;head&amp;lt;&amp;#47;code&amp;gt; command to see the first few lines, which in my download look like this:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true&quot;&gt;11&amp;#47;01&amp;#47;2011,04:00:00.301,P,14.5,21.36,5,1,R,,175,P,P,1,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,04:56:38.930,P,14.5,21.36,5,2,R,,18491,P,P,1,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,06:02:00.115,M,0,0,0,0,R,,40307,M,M,0,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,07:15:35.501,P,16.67,21.36,15,2,R,,73573,P,P,1,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,07:28:41.053,P,18.4,21.36,10,2,R,,80351,P,P,1,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,07:35:03.401,T,15.18,0,1,0,R,,88691,T,T,0,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,07:35:03.402,T,15.18,25.1,1,1,R,,88692,T,T,0,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,07:50:24.960,T,15.18,21.22,1,1,R,,100945,T,T,6,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,07:50:29.064,P,14.5,21.36,5,2,R,,100980,P,P,6,2,,C&lt;br /&gt;
11&amp;#47;01&amp;#47;2011,07:50:29.072,T,0,21.22,0,1,R,,100981,T,T,6,2,,C&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
If you look on TickData's website, you can find a &lt;a title=&quot;U.S. Equities TickData Format Definition&quot; href=&quot;http:&amp;#47;&amp;#47;www.tickdata.com&amp;#47;pdf&amp;#47;TickData_File_Format_Overview_US_Equities.pdf&quot;&gt;document describing the format&amp;lt;&amp;#47;a&amp;gt; of these files in detail, but for this example, we're only going to look at the first 7 fields.&amp;lt;/p&amp;gt;
&lt;ul&gt;
&lt;li&gt;Date (MM&amp;#47;DD&amp;#47;YYYY)&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Time&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Exchange indicator (P means ARCA, M means Chicago, T means NASD)&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Bid Price&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Ask Price&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Bid Amount (100 share lots)&amp;lt;&amp;#47;li&amp;gt;
&lt;li&gt;Ask Amount (100 share lots)&amp;lt;&amp;#47;li&amp;gt;&lt;br /&gt;
&amp;lt;&amp;#47;ul&amp;gt;&lt;br /&gt;
Let's create a new TSDB file to store this data. To do this, use the tsdbcreate command.&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:sh decode:true&quot;&gt;tsdbcreate glp.tsdb quotes char exchange double bid_price double ask_price int32 bid_size int32 ask_size&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
This command is creating a new tsdb database called glp.tsdb with a series called &quot;quotes&quot;. That series has 5 columns: exchange (a character), bid_price (floating point double), ask_price (floating point double), bid_size and ask_size (both 32-bit integers).&amp;lt;/p&amp;gt;
&lt;p&gt;You can add more than one series to a TSDB file. If you were to call the tsdbcreate command and glp.tsdb already existed, then it would add another series to the file.&lt;/p&gt;
&lt;p&gt;Now that you have an empty TSDB file, we'll create some import instructions and import the data. TSDB has a program called TSDB import that uses an XML file to describe how to parse the delimited data in a file like a CSV file and append it to the end of a time series.&amp;nbsp; Whenever you import data, you are always appending it to the end of a time series.&lt;strong&gt;&amp;nbsp;&amp;lt;&amp;#47;strong&amp;gt;You can import from more than one file into one series in a TSDB file, but you need to start with the earliest file. You also must make sure each of the files you import are in chronological order from oldest timestamp to newest (repeated timestamps are okay).&amp;lt;/p&amp;gt;
&lt;p&gt;Here's an example XML file that shows how you could import the TickData quotes files.&lt;/p&gt;
&lt;pre class=&quot;lang:xml&quot;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;br /&gt;
   &lt;dataimport&gt;&lt;br /&gt;
      &lt;delimparser field_delim=&quot;,&quot;&gt;&lt;br /&gt;
         &amp;lt;fieldparser name=&quot;_TDSB_timestamp&quot; type=&quot;timestamp&quot;&lt;br /&gt;
            tokens=&quot;0,1&quot; format_string=&quot;%m&amp;#47;%d&amp;#47;%Y %H:%M:%S%F&quot; &amp;#47;&amp;gt;&lt;br /&gt;
         &amp;lt;fieldparser name=&quot;exchange&quot; type=&quot;char&quot; tokens=&quot;2&quot; &amp;#47;&amp;gt;&lt;br /&gt;
         &amp;lt;fieldparser name=&quot;bid_price&quot; type=&quot;double&quot; tokens=&quot;3&quot; &amp;#47;&amp;gt;&lt;br /&gt;
         &amp;lt;fieldparser name=&quot;ask_price&quot; type=&quot;double&quot; tokens=&quot;4&quot; &amp;#47;&amp;gt;&lt;br /&gt;
         &amp;lt;fieldparser name=&quot;bid_amount&quot; type=&quot;int32&quot; tokens=&quot;5&quot; &amp;#47;&amp;gt;&lt;br /&gt;
         &amp;lt;fieldparser name=&quot;ask_amount&quot; type=&quot;int32&quot; tokens=&quot;6&quot; &amp;#47;&amp;gt;&lt;br /&gt;
      &amp;lt;&amp;#47;delimparser&amp;gt;&lt;br /&gt;
   &amp;lt;&amp;#47;dataimport&amp;gt;&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
The XML import tells the tsdbimport command how to map the comma-separated values in each line into columns in the database. Notice in the timestamp &lt;code&gt;fieldparser&amp;lt;&amp;#47;code&amp;gt; block, we specify to use tokens 0 and 1 to make the timestamp. This tells the parser to join tokens zero and one with a space and then to parse the combined string as a timestamp.&amp;lt;/p&amp;gt;
&lt;p&gt;You can save that XML as a text file called &quot;instructions.xml&quot; and then import the&amp;nbsp;GLP_27667.asc file like this:&lt;/p&gt;
&lt;pre class=&quot;lang:sh&quot;&gt;tsdbimport instructions.xml GLP_27667.asc glp.tsdb quotes&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
After you run this command, you'll have the complete GLP time series imported. Now, you can access this data quickly via either the R or MATLAB TSDB bindings. Stay tuned for a article on how to do that within the next few days.&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;/code&gt;&lt;/delimparser&gt;&lt;/dataimport&gt;&lt;/pre&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/a&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using Gitolite with Redmine</title>
   <link href="/2012/05/using-gitolite-with-redmine"/>
   <updated>2012-05-14T15:09:38+00:00</updated>
   <id>/2012/05/using-gitolite-with-redmine</id>
   <content type="html">&lt;p&gt;I use Gitolite to self-host multiple git projects and Redmine for time-tracking and project management. Redmine has a cool feature where it can integrate with source control management systems, but getting it to work with Gitolite was a bit of a challenge. Here's how I did it.&lt;/p&gt;
&lt;p&gt;First, create a new repository in Gitolite. You're going to want to mirror a read-only version somewhere for Redmine to access. Then, we'll keep them synced using a post-receive hook in Git. After you create your new Gitolite repo, login to your server and go to a folder where you'll keep a mirror for Redmine. In this example, I'll use &lt;code&gt;&amp;#47;var&amp;#47;gitolite-mirrors&amp;#47;&amp;lt;&amp;#47;code&amp;gt;. In that folder, type this to create a mirror of your Gitolite repo and, critically, make git change the permissions of new files to 0644 (which gives read access to all users). Note that # means run as root.&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true&quot;&gt;# git clone --mirror &amp;#47;home&amp;#47;git&amp;#47;repositories&amp;#47;my-new-repo.git&lt;br /&gt;
# cd my-new-repo.git&lt;br /&gt;
# git config --add core.sharedRepository 0644&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
Now, change the permissions so that the git user (the user that Gitolite runs as) owns this folder.&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true&quot;&gt;# chown -R git:git ..&amp;#47;my-new-repo.git&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
Finally, we'll add a post-receive hook to the Gitolite repo. Go to &lt;code&gt;&amp;#47;home&amp;#47;git&amp;#47;repositories&amp;#47;my-new-repo.git&amp;#47;hooks&amp;lt;&amp;#47;code&amp;gt;. Add a new file called &lt;code&gt;post-receive&amp;lt;&amp;#47;code&amp;gt;, and enter this into the file:&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true&quot;&gt;#!&amp;#47;bin&amp;#47;sh&lt;br /&gt;
&amp;#47;usr&amp;#47;bin&amp;#47;git push --mirror &amp;#47;var&amp;#47;gitolite-mirrors&amp;#47;my-new-repo.git&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
Then, you'll want to change the ownership and permissions on that.&amp;lt;/p&amp;gt;
&lt;pre class=&quot;lang:default highlight:0 decode:true crayon-selected&quot;&gt;# chown git:git post-receive&lt;br /&gt;
# chmod 700 post-receive&amp;lt;&amp;#47;pre&amp;gt;&lt;br /&gt;
In Redmine, go to your project you want to associate with this repo. Click the Settings, then Repository tabs. Choose Git as your SCM. In this example, you'd enter &lt;code&gt;&amp;#47;var&amp;#47;gitolite-mirrots&amp;#47;my-new-repo.git&amp;lt;&amp;#47;code&amp;gt; as your repository path. Click &quot;Save&quot;.&amp;lt;/p&amp;gt;
&lt;p&gt;Now, click the Repository tab on the top tab bar. You may get a 404 error at this point. That is because you need to push a master branch to this repository (it is empty right now). Push a few files to the repo and check again.&lt;/p&gt;
&lt;p&gt;If it is still not working, you can log in to your server and navigate to the mirror location (&lt;code&gt;&amp;#47;var&amp;#47;gitolite-mirrors&amp;#47;my-new-repo.git&amp;lt;&amp;#47;code&amp;gt;). Switch users to the user your Redmine process is running as (probably www-data or something similar). Redmine is running &lt;code&gt;git log master&amp;lt;&amp;#47;code&amp;gt; to get the changes from your repo to display on the webpage. Try running that command and see if you get any errors, and debug from there.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Takeaways from Lean Startup Machine DC</title>
   <link href="/2012/03/takeaways-from-lean-startup-machine-dc"/>
   <updated>2012-03-26T17:40:27+00:00</updated>
   <id>/2012/03/takeaways-from-lean-startup-machine-dc</id>
   <content type="html">&lt;p&gt;Last weekend, I went to &lt;a title=&quot;Lean Startup Machine&quot; href=&quot;http:&amp;#47;&amp;#47;leanstartupmachine.com&amp;#47;&quot;&gt;Lean Startup Machine DC&amp;lt;&amp;#47;a&amp;gt;, which is a weekend-long workshop on applying the principles of Eric Ries' book &lt;a href=&quot;http:&amp;#47;&amp;#47;www.amazon.com&amp;#47;The-Lean-Startup-Entrepreneurs-Continuous&amp;#47;dp&amp;#47;0307887898&quot;&gt;The Lean Startup&amp;lt;&amp;#47;a&amp;gt;. The weekend is incredibly intensive, and we made a lot of progress validating and invalidating some of the assumptions we had for our local peer-to-peer lending platform, &lt;a href=&quot;clovest.com&quot;&gt;Clovest&amp;lt;&amp;#47;a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;p&gt;For me the biggest take-away is the importance of talking to your customers early and often. Instead of writing code and building the website, we focused completely on customer interviews, market research, and developing a trial ad campaign to see how interested the community is in this project.&lt;/p&gt;
&lt;p&gt;Far too often, technical people (myself included) would rather spend a few hours building something in Rails, or whatever is the current coolest technology, instead of talking with end users. Building software has instant gratification, it feels productive, and the risk is minimal (besides wasting time and getting carpal tunnel syndrome). Talking to people is difficult and uncomfortable, and forces you to consider the possibility that they will reject your idea. However, wouldn't you rather have your idea rejected while its just a sketch on a napkin and not 20,000 lines of code that took 200 man-hours to write? I'd definitely prefer the former, and that's probably the biggest takeaway from the whole lean startup methodology.&lt;/p&gt;
&lt;/a&gt;&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using the Google Nexus S in China</title>
   <link href="/2011/09/using-google-nexus-s-china"/>
   <updated>2011-09-07T18:57:48+00:00</updated>
   <id>/2011/09/using-google-nexus-s-china</id>
   <content type="html">&lt;p&gt;I just spent two weeks in China visiting Beijing, Xi&amp;rsquo;an, and Shanghai. It was a great trip, but not speaking any Chinese made it rather difficult to get around at times. English is not widely spoken, and even in Shanghai, finding English speakers was difficult. Also, even writing things down was not effective because most Chinese only know the spelling of tourist sites in Chinese characters. I knew this before I left, and figured having my cell phone working in China would be very useful for translation and maps. This proved to be true, and there were a few times where it was really invaluable (for example, showing the Chinese taxi driver my destination on Google Maps, which has English and Chinese names, was often the only way to convey where I wanted to go).&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how I got my phone, the Google Nexus S, to work in China. This should work with any other unlocked T-Mobile phone, too. First, there are two major cell phone carriers in China: China Mobile, and China Unicom. You&amp;rsquo;ll want to use China Unicom because they have 3G on the 2100 MHz band, which is the same as T-Mobile uses in the US. You can buy a SIM card from many convenience stores in China, or you can order one from &lt;a href=&quot;http:&amp;#47;&amp;#47;www.3gsolutions.com.cn&amp;#47;page&amp;#47;simcard&amp;#47;&quot;&gt;3GSolutions&amp;lt;&amp;#47;a&amp;gt;. I got package 3S96 from them, which is a SIM card with CNY 50 of credit on it. If you order it from them, they will mail it to your hotel for you to pick up upon arrival. This was helpful, but China Unicom stores are ubiquitous in big cities and many convenience stores had SIM cards too.&amp;lt;/p&amp;gt;
&lt;p&gt;After you get your SIM card, you&amp;rsquo;ll want to activate a monthly plan on it. If you don&amp;rsquo;t use a plan, 3G data charges are astronomical. China Unicom only bills by calendar-month, which is a pain if you are arriving at the end a month like I was. However, you can also buy a half-month plan with half the data and call time allowance for half the price for your first calendar month there. 3GSolutions has a good list of the available plans &lt;a href=&quot;http:&amp;#47;&amp;#47;www.3gsolutions.com.cn&amp;#47;page&amp;#47;mthplan&amp;#47;&quot;&gt;here&amp;lt;&amp;#47;a&amp;gt;. If you get your SIM card from 3GSolutions, they will activate a plan for you, or a least they say they will. Unfortunately, for some reason my monthly plan was not activated when I got my SIM card, and I quickly blew through the credits on it using Google Maps.&amp;lt;/p&amp;gt;
&lt;p&gt;To activate a monthly plan yourself, just call 10010. If you are not in the city where you bought the SIM card when you want to activate a plan, you will need to dial the city code first. For example, my SIM card was purchased in Shanghai, which is city code 021. So, to activate a plan while I was in Beijing, I called 021-10010. There are operators who speak English well, at least on the Shanghai hotline.&lt;/p&gt;
&lt;p&gt;So, how much does this all cost? If you go at the end of a month (I arrived on July 24 and was staying until August 4), it will be more expensive since you will need to pay for two months of service. That being said, overall it is not too expensive: CNY 100 for the SIM card with CNY 50 in credits. Then I added CNY 50 by buying a recharge card. I got the CNY 66 monthly plan with 300 MB of data and 50 minutes of calling. For my first week there (in July), I took advantage of the half-price first month deal from China Unicom (CNY 33 for 150 MB and 25 minutes of calling). Then for the few days in August I was there, I was charged CNY 66 for that month. In total, it would have come to CNY 150, and I&amp;rsquo;d be left with a SIM card with CNY 1 on it when I left.&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;That&amp;rsquo;s about $23.30, which given the number of times I needed Google Maps&amp;#47;Translator, was definitely worth it. I ended up actually paying a bit more since 3GSolutions charges a&amp;nbsp;commission&amp;nbsp;to get the SIM card and send it to you, and also because somehow my plan wasn&amp;rsquo;t activated at first and I quickly blew through the included credits.&lt;/p&gt;
&lt;h1&gt;Getting around the Great Firewall&amp;lt;&amp;#47;h1&amp;gt;&lt;br /&gt;
China blocks a lot of websites that websites that we take for granted, and if you really need to access Facebook and Twitter from China, you&amp;rsquo;ll need a VPN. The Nexus S has a built-in VPN client, but it was very flaky for me. If you loose a network connection for any reason (going out or range for wifi or loosing cell service briefly), you&amp;rsquo;ll loose your connection to the VPN. Also, I&amp;rsquo;ve heard reports that PPTP VPNs have been blocked in China, but I couldn&amp;rsquo;t confirm this.&amp;lt;/p&amp;gt;
&lt;p&gt;I experimented with &lt;a href=&quot;http:&amp;#47;&amp;#47;billing.purevpn.com&amp;#47;aff.php?aff=453&quot;&gt;PureVPN&amp;lt;&amp;#47;a&amp;gt;, which uses IPSec, over China Unicom and it actually worked well. It did not work at all over any wifi hotspot that I tested in China.&amp;lt;/p&amp;gt;
&lt;p&gt;&amp;lt;&amp;#47;div&amp;gt;&lt;/p&gt;
&lt;/a&gt;&lt;/p&gt;&lt;/h1&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>

{"pageProps":{"postData":{"id":"using-node-datapipes-to-etl-from-one-mongodb-to-a-second-mongodb","contentHtml":"<p>ETL - not the most fun to write, but the <a href=\"https://www.npmjs.com/package/datapipes\">datapipes</a> package makes it pretty easy on NodeJS.</p>\n<p>One thing that wasn't explained in the documentation well was how to ETL from one MongoDB to another using the MongodbMixin. The problem when you use the MongodbMixin twice in the same pipe is that it gets confused about which connection to use for which things. Here's how to use pipe groups to fix that.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> etlProcess <span class=\"token operator\">=</span> datapumps<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> extractPump <span class=\"token operator\">=</span> etlProcess<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addPump</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extract'</span><span class=\"token punctuation\">)</span>\nextractPump\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mixin</span><span class=\"token punctuation\">(</span><span class=\"token function\"><span class=\"token maybe-class-name\">MongodbMixin</span></span><span class=\"token punctuation\">(</span>sourceDbUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useCollection</span><span class=\"token punctuation\">(</span>sourceCollection<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword module\">from</span><span class=\"token punctuation\">(</span>extractPump<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// take all items from sourceCollection</span>\n\n<span class=\"token keyword\">var</span> upsertPump <span class=\"token operator\">=</span> etlProcess<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addPump</span><span class=\"token punctuation\">(</span><span class=\"token string\">'upsert'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nupsertPump\n  <span class=\"token punctuation\">.</span><span class=\"token keyword module\">from</span><span class=\"token punctuation\">(</span>extractPump<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mixin</span><span class=\"token punctuation\">(</span><span class=\"token function\"><span class=\"token maybe-class-name\">MongodbMixin</span></span><span class=\"token punctuation\">(</span>sinkDbUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useCollection</span><span class=\"token punctuation\">(</span>sinkDbCollection<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">process</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">' - ETLing '</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">[</span><span class=\"token string\">'_id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// need to return a promise from process</span>\n    <span class=\"token keyword control-flow\">return</span> upsertPump<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'_id'</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">[</span><span class=\"token string\">'_id'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>upsert<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\netlProcess\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">logErrorsToConsole</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">whenFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'finished ETLing.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    process<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n","layout":"post","status":"publish","published":true,"title":"Using Node datapipes to ETL from one MongoDB collection to a second MongoDB collection","author":{"display_name":"afiedler","login":"afiedler","email":"andy@andyfiedler.com","url":""},"author_login":"afiedler","author_email":"andy@andyfiedler.com","wordpress_id":321,"wordpress_url":"http://andyfiedler.com/?p=321","date":"2015-07-15 16:14:01 -0400","date_gmt":"2015-07-15 20:14:01 -0400","categories":["Scrapbook"],"tags":["nodejs","mongodb","data"]}},"__N_SSG":true}
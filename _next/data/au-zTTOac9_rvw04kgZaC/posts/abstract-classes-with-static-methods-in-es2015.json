{"pageProps":{"postData":{"id":"abstract-classes-with-static-methods-in-es2015","contentHtml":"<p>ES2105 classes have much better support for static method patterns than traditional ways of doing it in ES5.</p>\n<p>In ES2015, there are actually two prototype chains in classes: one for instance methods and one for static methods. This means you can use <code>super</code> and <code>this</code> in a static method, and it works as expected.</p>\n<p>This makes using an abstract class pattern much easier. Here's an example:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractShape</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> get <span class=\"token constant\">SHAPE_NAME</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'must specify a SHAPE_NAME in your subclass of '</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'AbstractShape'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">englishName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SHAPE_NAME</span><span class=\"token punctuation\">[</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">spanishName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SHAPE_NAME</span><span class=\"token punctuation\">[</span><span class=\"token string\">'en-MX'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Square</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractShape</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> get <span class=\"token constant\">SHAPE_NAME</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'en-US'</span><span class=\"token operator\">:</span> <span class=\"token string\">'square'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'es-MX'</span><span class=\"token operator\">:</span> <span class=\"token string\">'cuadrado'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Square</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">englishName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -> 'square'</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Square</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">spanishName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -> 'cuadrado'</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AbstractShape</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">englishName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Throws an Error</span>\n</code></pre></div>\n<p>A few things that are interesting with ES2015 static methods:</p>\n<ul>\n<li>You can't have static properties, but you can make static getters to get the same effect (with some syntactic noise).</li>\n<li>In a static method, <code>this</code> refers to the class itself. Effectively, you can just access other static methods with <code>this</code>.</li>\n<li>You cannot refer to the class itself in the class body. This is not legal:</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">englishName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword control-flow\">return</span> <span class=\"token maybe-class-name\">AbstractShape</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SHAPE_NAME</span><span class=\"token punctuation\">[</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>I'm guessing is the reason for this is that classes are not hoisted in ES2015.</p>\n<p>More class posts coming soon!</p>\n","layout":"post","status":"publish","published":true,"title":"Abstract Classes with Static Methods in ES2015","author":{"display_name":"afiedler","login":"afiedler","email":"andy@andyfiedler.com","url":""},"author_login":"afiedler","author_email":"andy@andyfiedler.com","wordpress_id":357,"wordpress_url":"http://andyfiedler.com/?p=357","date":"2016-01-19 14:42:17 -0500","date_gmt":"2016-01-19 19:42:17 -0500","categories":["Tech Notes"],"tags":["nodejs","es2015"]}},"__N_SSG":true}
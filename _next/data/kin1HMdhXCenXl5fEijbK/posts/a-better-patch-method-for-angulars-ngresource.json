{"pageProps":{"postData":{"id":"a-better-patch-method-for-angulars-ngresource","contentHtml":"<p>Angular's ngResource makes a pretty decent starting point for developing a front-end model layer, but tends to be a little simplistic as your backend API gets more sophisticated.</p>\n<p>One issue I ran into recently is that the <code>$patch</code> method sends the entire object in the request body. This is usually not what you want to do, because the PATCH method is <a href=\"https://tools.ietf.org/html/rfc5789\">designed for a partial resource modification</a>, typically using something like <a href=\"https://tools.ietf.org/html/rfc7386\">JSON Merge Patch</a> or <a href=\"https://tools.ietf.org/html/rfc6902\">JSON Patch</a> as the request body.</p>\n<p>Here's how to add a <code>$patchFields</code> method to your resource that creates a JSON Merge Patch for a set of fields, and then sends it to the backend.</p>\n<p>This is how you'd use it:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> product <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   id<span class=\"token operator\">:</span> <span class=\"token number\">231</span>\n   name<span class=\"token operator\">:</span> <span class=\"token string\">'iPad'</span><span class=\"token punctuation\">,</span>\n   price<span class=\"token operator\">:</span> <span class=\"token number\">429.99</span><span class=\"token punctuation\">,</span>\n   size<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      height<span class=\"token operator\">:</span> <span class=\"token number\">9.4</span><span class=\"token punctuation\">,</span>\n      width<span class=\"token operator\">:</span> <span class=\"token number\">6.2</span><span class=\"token punctuation\">,</span>\n      depth<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nproduct<span class=\"token punctuation\">.</span><span class=\"token property-access\">price</span> <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\nproduct<span class=\"token punctuation\">.</span><span class=\"token property-access\">size</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> promise <span class=\"token operator\">=</span> product<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$patchFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'size.height'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*</span>\n<span class=\"token comment\"> * Sends a request like this:</span>\n<span class=\"token comment\"> * PATCH http://api.example.com/products/231</span>\n<span class=\"token comment\"> * {</span>\n<span class=\"token comment\"> *    \"price\": 400,</span>\n<span class=\"token comment\"> *    \"size\": {</span>\n<span class=\"token comment\"> *       \"height\": 10</span>\n<span class=\"token comment\"> *    }</span>\n<span class=\"token comment\"> * }</span>\n<span class=\"token comment\"> *</span>\n<span class=\"token comment\"> */</span>\n</code></pre></div>\n<p>And here's the code:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myApp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">factory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Product'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">$resource</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">var</span> <span class=\"token maybe-class-name\">Product</span> <span class=\"token operator\">=</span> <span class=\"token function\">$resource</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'http://api.example.com/products/:id'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'id'</span> <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">extend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'$patchFields'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fields<span class=\"token punctuation\">,</span> success<span class=\"token punctuation\">,</span> error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n         patch <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">generatePatch</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">Product</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">patch</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">call</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> self<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            patch<span class=\"token punctuation\">,</span>\n            success<span class=\"token punctuation\">,</span>\n            error\n         <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword control-flow\">return</span> result<span class=\"token punctuation\">.</span><span class=\"token property-access\">$promise</span> <span class=\"token operator\">||</span> result<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">generatePatch</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fields</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isArray</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> fields <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n\n         <span class=\"token keyword control-flow\">return</span> fields<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> fields</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setFieldByPath</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getFieldByPath</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword control-flow\">return</span> result<span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">getFieldByPath</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toJson</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">var</span> paths <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> paths<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isUndefined</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n               <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n               ret <span class=\"token operator\">=</span> ret<span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n         <span class=\"token punctuation\">}</span>\n         <span class=\"token keyword control-flow\">return</span> ret<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">function</span> <span class=\"token function\">setFieldByPath</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> paths <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> setOn <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> paths<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> paths<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isUndefined</span><span class=\"token punctuation\">(</span>setOn<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>\n               angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isObject</span><span class=\"token punctuation\">(</span>setOn<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;&#x26;</span>\n               <span class=\"token operator\">!</span>angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isArray</span><span class=\"token punctuation\">(</span>setOn<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n               setOn <span class=\"token operator\">=</span> setOn<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n               <span class=\"token keyword control-flow\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token string\">'Path '</span> <span class=\"token operator\">+</span>\n                  path <span class=\"token operator\">+</span>\n                  <span class=\"token string\">' has an item that is not an object'</span>\n               <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n         <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n            setOn<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            setOn <span class=\"token operator\">=</span> setOn<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>angular<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isFunction</span><span class=\"token punctuation\">(</span>setOn<span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         setOn<span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword control-flow\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">'Cannot set value at '</span> <span class=\"token operator\">+</span>\n            path <span class=\"token operator\">+</span>\n            <span class=\"token string\">' since it would overwrite a function'</span>\n         <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword control-flow\">return</span> <span class=\"token maybe-class-name\">Product</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n","layout":"post","title":"A Better $patch Method for Angular's ngResource","redirect_from":["/blog/a-better-patch-method-for-angulars-ngresource-373/","/blog/a-better-patch-method-for-angulars-ngresource-373/"]}},"__N_SSG":true}